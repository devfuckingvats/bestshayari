{"version":3,"sources":["components/Home.js","components/Error404.js","container/Snackbar.js","components/TagPage.js","components/Upload.js","components/Search.js","App.js","serviceWorker.js","index.js"],"names":["Home","tags","this","props","react_default","a","createElement","Fragment","map","tag","className","key","react_router_dom","to","concat","Component","Error404","SnackbarContainer","open","message","handleClose","Snackbar","anchorOrigin","vertical","horizontal","onClose","autoHideDuration","TagPage","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","fetchContent","titleArray","contentArray","poetArray","tempRelatedTagsObject","relatedTagsArray","state","shayariObject","length","firebase","firestore","collection","doc","orderBy","get","then","snap","i","forEach","title","data","content","poet","push","assign","defineProperty","setState","prev","objectSpread","relatedTagsObject","putIntoShayariObject","handleContentClick","e","target","innerHTML","handleSnackbarClose","snackbar","handleCopy","_this2","tagsObject","labelIconStyle","fontSize","id","style","textAlign","textTransform","react_clipboard_default","data-clipboard-text","charAt","toUpperCase","slice","onClick","substring","LabelSharp_default","container_Snackbar","Upload","handleTagChange","value","handleTitleChange","handleContentChange","console","log","handlePoetChange","upload","uploading","newTagInputValue","toConsumableArray","set","totalShayaris","update","FieldValue","increment","timestamp","serverTimestamp","newTagInput","alert","catch","err","showNewTagInput","handleNewTag","FormControl","InputLabel","htmlFor","Select","multiple","onChange","input","Input","renderValue","selected","join","MenuItem","Checkbox","checked","indexOf","ListItemText","primary","TextField","label","placeholder","margin","multiline","type","disabled","Search","handleInputFocus","searching","handleInputChange","searchingWord","searchingList","filter","toLowerCase","window","addEventListener","position","border","left","width","height","right","paddingLeft","transition","boxShadow","maxLength","App","toggleDrawer","drawer","loading","tagsArray","tempShayariObject","error","_this3","Menu_default","components_Search","react_router","exact","path","render","components_Home","components_TagPage","match","params","components_Upload","component","Drawer","anchor","role","onKeyDown","List","ListItem","button","ListItemIcon","icons_Home_default","Boolean","location","hostname","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.34489f4c.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport '../styles/Home.css';\nimport { Link } from 'react-router-dom'\n\nclass Home extends Component {\n\n    render() {\n        const { tags } = this.props;\n        return (\n            <React.Fragment>\n                {\n                    tags.map(tag => (\n                    <div className='tagCards' \n                    key={tag}>\n                    <Link to={`/tags/${tag}`}>{tag}</Link>\n                    </div>\n                    ))\n                }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Home","import React, { Component } from 'react'\n\nexport default class Error404 extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Error404</h1>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\n\nfunction SnackbarContainer(props) {\n    const { open, message, handleClose } = props;\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{vertical: 'bottom', horizontal: 'left'}}\n                open={open}\n                onClose={handleClose}\n                message={message}\n                autoHideDuration={2000}\n            />\n        </div>\n    )\n}\n\nexport default SnackbarContainer","import React, { Component } from 'react';\nimport firebase from 'firebase';\nimport { Link } from 'react-router-dom';\nimport '../styles/TagPage.css';\nimport SnackbarContainer from '../container/Snackbar';\nimport Clipboard from 'react-clipboard.js';\nimport LabelSharpIcon from '@material-ui/icons/LabelSharp'\n\nclass TagPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            shayariObject: Object.assign({}, props.shayariObject),\n            snackbar: false\n        }\n    }\n\n    fetchContent = () => {\n        var titleArray = [];\n        var contentArray = [];\n        var poetArray = [];\n        var tempRelatedTagsObject = {};\n        var relatedTagsArray = [];\n        if(!this.state.shayariObject[this.props.tag].titleArray.length){\n            firebase.firestore().collection('tags').doc(this.props.tag).collection('shayaris').orderBy('timestamp', 'desc').get()\n            .then(snap => {\n                var i = 0;\n                snap.forEach(doc => {\n                    var title = doc.data().title;\n                    var content = doc.data().content;\n                    var poet = doc.data().poet;\n                    relatedTagsArray = doc.data().tags;\n                    titleArray.push(title);\n                    contentArray.push(content);\n                    poetArray.push(poet);\n                    Object.assign(tempRelatedTagsObject, {\n                        [i]: relatedTagsArray\n                    })\n                    i++;\n                })\n                this.setState(prev => ({\n                    shayariObject: Object.assign({}, prev.shayariObject, {\n                            [this.props.tag]: {\n                                ...prev.shayariObject[this.props.tag],\n                                titleArray: titleArray,\n                                contentArray: contentArray,\n                                poetArray: poetArray,\n                                relatedTagsObject: tempRelatedTagsObject\n                            }\n                    })\n                }), () => {\n                    this.props.putIntoShayariObject(this.state.shayariObject)\n                })\n            })\n        }\n    }\n\n    handleContentClick = (e, content) => {\n        e.target.innerHTML = content;\n    }\n\n    handleSnackbarClose = () => {\n        this.setState({\n            snackbar: false\n        })\n    }\n\n    handleCopy = () => {\n        this.setState({\n            snackbar: true\n        })\n    }\n\n    render() {\n        const { tag } = this.props;\n        const { shayariObject } = this.state;\n        var titleArray = shayariObject[tag].titleArray;\n        var contentArray = shayariObject[tag].contentArray;\n        var poetArray = shayariObject[tag].poetArray;\n        var tagsObject = shayariObject[tag].relatedTagsObject;\n        const labelIconStyle = {\n            fontSize: '22px'\n        }\n        return (\n            <div id='tagPage'>\n                <h2 style={{textAlign: 'center', textTransform: 'capitalize'}}>{tag}</h2>\n                <hr/>\n                {\n                    shayariObject[tag].titleArray.length ?\n                    titleArray.map((title, i) => (\n                        <React.Fragment key={i}>\n                        <div className={`shayariCard div${i}`}>\n                            <div className={`shayariCardHeader div${i}`}>\n                                <Clipboard \n                                className='copyBtn'\n                                data-clipboard-text={\n                                    titleArray[i].charAt(0).toUpperCase() + titleArray[i].slice(1) + '\\n' \n                                    + contentArray[i].charAt(0).toUpperCase() + contentArray[i].slice(1) \n                                    + '\\nbestshayaris.com'}\n                                onClick={this.handleCopy}>\n                                copy\n                                </Clipboard>\n                            </div>\n                            <div className={`div${i} shayariCardTitle`}>\n                                {title.charAt(0).toUpperCase() + title.slice(1)}\n                            </div>\n                            <br/>\n                            <div className={`div${i} shayariCardContent`} onClick={e => this.handleContentClick(e, contentArray[i])}>\n                                {contentArray[i].length > 200 ? contentArray[i].substring(0,200) + '....' : contentArray[i]}\n                            </div>\n                            <div className='shayariCardLinks'>\n                                <LabelSharpIcon style={labelIconStyle} />\n                                {tagsObject[i].map((tag, i) => (\n                                    <React.Fragment key={tag}>\n                                        <Link to={`./${tag}`} className='relatedLinks'>{i === 0 ? null : ','}{tag}</Link>\n                                    </React.Fragment>\n                                ))}\n                            </div>\n                            <div className='shayariCardPoet'>\n                                {poetArray[i]}\n                            </div>\n                            &ensp;\n                        </div>\n                        <hr/>\n                        </React.Fragment>\n                    ))\n                    :\n                    this.fetchContent()\n                }\n                <SnackbarContainer open={this.state.snackbar} message='copied.' handleClose={this.handleSnackbarClose} />\n            </div>\n        )\n    }\n}\n\nexport default TagPage","import React, { Component } from 'react'\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport firebase from 'firebase'\nimport '../styles/Upload.css'\n\nclass Upload extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            title: '',\n            content: '',\n            poet: '',\n            tags: [],\n            newTagInput: false,\n            newTagInputValue: '',\n            uploading: false\n        }\n    }\n\n    handleTagChange = (e) => {\n        this.setState(prev => ({\n            tags: e.target.value\n        }))\n    }\n\n    handleTitleChange = (e) => {\n        this.setState({\n            title: e.target.value\n        })\n    }\n\n    handleContentChange = (e) => {\n        this.setState({\n            content: e.target.value\n        })\n        console.log(this.state.content);\n    }\n\n    handlePoetChange = (e) => {\n        this.setState({\n            poet: e.target.value\n        })\n    }\n\n    upload = () => {\n        var tags = this.state.tags;\n        var title = this.state.title;\n        var content = this.state.content;\n        var poet = this.state.poet;\n        if(tags){\n            if(title){\n                if(content){\n                    this.setState({\n                        uploading: true\n                    })\n                    if(this.state.newTagInputValue !== ''){                 //there is a new tag\n                        this.setState(prev => ({\n                            tags: [...prev.tags, this.state.newTagInputValue]\n                        }))\n                        firebase.firestore().collection('tags').doc(this.state.newTagInputValue).set({\n                            totalShayaris: 0\n                        })\n                        .then(() => {\n                            //upload\n                            this.state.tags.forEach((tag, i) => {\n                                firebase.firestore().collection('tags').doc(tag).update({\n                                    totalShayaris: firebase.firestore.FieldValue.increment(1)\n                                })\n                                .then(() => {\n                                    firebase.firestore().collection('tags').doc(tag).collection('shayaris').doc().set({\n                                        title: title,\n                                        content: content,\n                                        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                                        tags: this.state.tags,\n                                        poet: poet\n                                    })\n                                    .then(() => {\n                                        if(i === this.state.tags.length-1){\n                                            this.setState({\n                                                title: '',\n                                                content: '',\n                                                poet: '',\n                                                tags: [],\n                                                newTagInput: false,\n                                                newTagInputValue: '',\n                                                uploading: false\n                                            })\n                                            alert('uploaded');\n                                        }\n                                    })\n                                })\n                                .catch(err => {\n                                    alert('cannot upload due to some error.')\n                                })\n                            })\n                        })\n                    } else {                    //there is no new tag\n                        this.state.tags.forEach((tag, i) => {\n                            firebase.firestore().collection('tags').doc(tag).update({\n                                totalShayaris: firebase.firestore.FieldValue.increment(1)\n                            })\n                            .then(() => {\n                                firebase.firestore().collection('tags').doc(tag).collection('shayaris').doc().set({\n                                    title: title,\n                                    content: content,\n                                    poet: poet,\n                                    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                                    tags: this.state.tags,\n                                })\n                                .then(() => {\n                                    if(i === this.state.tags.length-1){\n                                        this.setState({\n                                            title: '',\n                                            content: '',\n                                            poet: '',\n                                            tags: [],\n                                            newTagInput: false,\n                                            newTagInputValue: '',\n                                            uploading: false\n                                        })\n                                        alert('uploaded');\n                                    }\n                                })\n                            })\n                            .catch(err => {\n                                alert('cannot upload due to some error.')\n                            })\n                        })   \n                    }\n                }else {\n                    alert('error')\n                }\n            } else {\n                alert('error')\n            }\n        }else {\n            alert('error')\n        }\n    }\n\n    showNewTagInput = () => {\n        this.setState({\n            newTagInput: !this.state.newTagInput\n        })\n    }\n\n    handleNewTag = (e) => {\n        this.setState({\n            newTagInputValue: e.target.value\n        })\n    }\n\n    render() {\n        return (\n            <div style={{textAlign: 'center'}}>\n                <FormControl>\n                    <InputLabel htmlFor=\"select-multiple-chip\">Tag</InputLabel>\n                    <Select\n                      multiple\n                      value={this.state.tags}\n                      onChange={e => this.handleTagChange(e)}\n                      input={<Input id=\"select-multiple-checkbox\" />}\n                      renderValue={selected => selected.join(', ')}\n                    >\n                        {this.props.tags.map(tag => (\n                          <MenuItem key={tag} value={tag}>\n                          <Checkbox checked={this.state.tags.indexOf(tag) > -1} />\n                          <ListItemText primary={tag} />\n                          </MenuItem>\n                        ))}\n                    </Select>\n                    <button className='newTagBtn' onClick={this.showNewTagInput}>New Tag</button>\n\n                    {\n                        this.state.newTagInput ?\n                        <TextField\n                            label=\"New Tag\"\n                            placeholder=\"type your tag\"\n                            value={this.state.newTagInputValue}\n                            onChange={this.handleNewTag}\n                          /> :\n                          null\n                    }\n                  <TextField\n                      label=\"Title\"\n                      placeholder=\"Choose title wisely\"\n                      margin=\"normal\"\n                      value={this.state.title}\n                      onChange={e => this.handleTitleChange(e)}\n                    />\n                  <TextField\n                      label=\"Content\"\n                      placeholder=\"Write beyond imagination\"\n                      multiline\n                      margin=\"normal\"\n                      value={this.state.content}\n                      onChange={e => this.handleContentChange(e)}\n                    />\n                  <TextField\n                      label=\"Poet\"\n                      placeholder=\"Poet\"\n                      margin=\"normal\"\n                      value={this.state.poet}\n                      onChange={e => this.handlePoetChange(e)}\n                    />\n                    <button type='submit' onClick={this.upload} className='uploadBtn' disabled={this.state.uploading}>Upload</button>\n                </FormControl>\n            </div>\n        )\n    }\n}\n\nexport default Upload","import React, { Component } from 'react';\nimport '../styles/Search.css';\nimport { Link } from 'react-router-dom';\n\nclass Search extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            searching: false,\n            searchingWord: '',\n            searchingList: props.tags\n        }\n    }\n    \n      handleInputFocus = (e) => {\n        this.setState({\n          searching: true\n        })\n      }\n    \n      handleInputChange = (e) => {\n        this.setState({\n            searchingWord: e.target.value,\n            searchingList: this.props.tags.filter(tag => {\n                return tag.indexOf(e.target.value.toLowerCase()) !== -1\n            })\n        })\n      }\n\n    render() {\n      const focusStyle = {\n        position: 'absolute',\n        border: 'none',\n        left: '0',\n        width: '100%',\n        margin: '0',\n        height: '35px',\n\n      }\n      const style = {\n        position: 'absolute',\n        width: '20%',\n        right: '0',\n        margin: '6px',\n        height: '25px',\n        fontSize: '16px',\n        border: '1px solid black',\n        paddingLeft: '5px',\n        transition: '.4s',\n        boxShadow: '1px 1px 3px'\n      }\n        return (\n            <React.Fragment>\n            {\n              this.state.searching ? window.addEventListener('popstate', () => this.setState({searching: false, searchingWord: ''})) : null\n            }\n                  <input\n                  style={this.state.searching ? focusStyle : style}\n                  placeholder='search...'\n                  maxLength='20'\n                  onClick={(e) => this.setState({searching: true, searchingWord: e.target.value})}\n                  value={this.state.searchingWord} \n                  onChange={e => this.handleInputChange(e)}/>\n                {\n                    !this.state.searching ? null :\n                    <div id='searchingListParent'>\n                      <ul className='searchingList' onClick={() => this.setState({searching: false, searchingWord: '', searchingList: this.props.tags})}>\n                        {\n                          this.state.searchingList.map((tag, i) => (\n                            <Link key={tag} to={`/tags/${tag}`} className='searchingListItemLink'>\n                                <li className='searchingListItem'>{tag}</li>\n                            </Link>\n                          ))\n                        }\n                      </ul>\n                    </div> \n                }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Search","import React, { Component } from 'react';\nimport './App.css'\nimport { HashRouter, Switch, Route, Link } from 'react-router-dom'\nimport Home from './components/Home';\nimport Error404 from './components/Error404';\nimport Menu from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport firebase from 'firebase'\nimport TagPage from './components/TagPage';\nimport Upload from './components/Upload';\nimport Search from './components/Search';\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n        tags: [],\n        drawer: false,\n        loading: true,\n        shayariObject: {}\n    }\n  }\n\n  componentDidMount() {\n    var tagsArray = [];\n    var tempShayariObject = {};\n    var totalShayaris = 0;\n    firebase.firestore().collection('tags').get()\n    .then(snap => {\n      snap.forEach(doc => {\n        var tag =  doc.id;\n        totalShayaris = doc.data().totalShayaris;\n        tagsArray.push(tag)\n        tempShayariObject[tag] = {\n          titleArray: [],\n          contentArray: [],\n          poetArray: []\n        }\n      })\n      tagsArray.forEach(tag => {\n        tempShayariObject[tag].relatedTagsObject = {};\n        for(let i=0; i<totalShayaris; i++){\n          tempShayariObject[tag].relatedTagsObject[i] = [];\n        }\n      })\n      this.setState(prev => ({\n        tags: tagsArray,\n        loading: false,\n        shayariObject: Object.assign({}, prev.shayariObject, tempShayariObject)\n      }))\n    })\n    .catch(error => {\n      alert(error.message)\n    })\n  }\n\n  putIntoShayariObject = (shayariObject) => {\n    this.setState(prev => ({\n      shayariObject: Object.assign(prev.shayariObject, shayariObject)\n    }))\n  }\n\n  toggleDrawer = () => {\n    this.setState({\n      drawer: !this.state.drawer\n    })\n  }\n\n  render() {\n    const list = () => (\n      <div\n        role=\"presentation\"\n        onClick={() => this.toggleDrawer()}\n        onKeyDown={() => this.toggleDrawer()}\n      >\n        <List>\n            <ListItem button>\n              <ListItemIcon><HomeIcon/></ListItemIcon>\n              <ListItemText><Link to='/' className='drawerTextLink'>Home</Link></ListItemText>\n            </ListItem>\n        </List>\n      </div>\n    );\n\n    return (\n      this.state.loading ? <h1>loading</h1> :\n      <div className=\"App\">\n      <HashRouter>\n      <div \n      className='header'>\n        <Menu fontSize='large' onClick={this.toggleDrawer}\n        className='headerMenuIcon' />\n        <span className='headerName'><Link to='/' className='link'>𝓫𝓮𝓼𝓽𝓼𝓱𝓪𝔂𝓪𝓻𝓲𝓼.𝓬𝓸𝓶</Link></span>\n        <Search tags={this.state.tags} />\n      </div>\n\n      <Switch>\n        <Route exact path='/' render={props => <Home tags={this.state.tags} />} />\n\n        <Route path='/tags/:tag' render={props => \n        <TagPage \n        tag={props.match.params.tag}\n        shayariObject={this.state.shayariObject}\n        putIntoShayariObject={this.putIntoShayariObject} />} />\n\n        <Route exact path='/upload' render={props => <Upload tags={this.state.tags} />} />\n\n        <Route path='*' component={Error404} />\n      </Switch>\n\n      <Drawer anchor='left' open={this.state.drawer} onClose={this.toggleDrawer}>\n          {list()}\n      </Drawer>\n      </HashRouter>\n    </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from 'firebase'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCEMfOB5_j1hIdpxVXOduBuUMTwj5txVZo\",\n    authDomain: \"bestshayari-7f672.firebaseapp.com\",\n    databaseURL: \"https://bestshayari-7f672.firebaseio.com\",\n    projectId: \"bestshayari-7f672\",\n    storageBucket: \"bestshayari-7f672.appspot.com\",\n    messagingSenderId: \"1001640034721\",\n    appId: \"1:1001640034721:web:251a9065628579fe518be0\",\n    measurementId: \"G-EQP9800NT3\"\n};\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}