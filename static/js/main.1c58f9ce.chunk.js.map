{"version":3,"sources":["components/Home.js","components/Error404.js","container/Snackbar.js","components/TagPage.js","components/Upload.js","components/Search.js","container/Menu.js","components/EditFinal.js","components/Edit.js","App.js","serviceWorker.js","index.js"],"names":["Home","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","title","content","poet","relatedTags","pageSize","_this2","titleArray","contentArray","poetArray","tempTagsObject","i","firebase","firestore","collection","doc","get","then","snap","forEach","push","data","assign","defineProperty","tags","setState","_this3","props","_this$state","react_default","a","createElement","Fragment","style","textAlign","slice","map","key","className","concat","react_carousel_default","slidesPerPage","slidesPerScroll","keepDirectionWhenDragging","tag","react_router_dom","to","length","onClick","e","prev","infinite","Component","Error404","SnackbarContainer","open","message","handleClose","Snackbar","anchorOrigin","vertical","horizontal","onClose","autoHideDuration","TagPage","fetchContent","tempRelatedTagsObject","tempTagsToShowObject","relatedTagsArray","shayariObject","orderBy","objectSpread","relatedTagsObject","tagsToShowObject","putIntoShayariObject","handleContentClick","target","innerHTML","handleSnackbarClose","snackbar","handleCopy","handleSeeMore","handleSeeLess","tagsToShow","keys","tagsObject","labelIconStyle","fontSize","id","textTransform","react_clipboard_default","data-clipboard-text","charAt","toUpperCase","substring","LabelSharp_default","totalShayaris","container_Snackbar","Upload","handleTagChange","value","handleTitleChange","handleContentChange","handlePoetChange","upload","uploading","newTagInputValue","toConsumableArray","set","update","FieldValue","increment","timestamp","serverTimestamp","newTagInput","alert","catch","err","showNewTagInput","handleNewTag","authMe","password","authenticated","FormControl","InputLabel","htmlFor","Select","multiple","onChange","input","Input","renderValue","selected","join","MenuItem","Checkbox","checked","indexOf","ListItemText","primary","TextField","label","placeholder","margin","multiline","type","disabled","Search","handleInputFocus","searching","handleInputChange","searchingWord","searchingList","filter","toLowerCase","window","addEventListener","position","border","left","width","height","right","paddingLeft","transition","boxShadow","maxLength","withRouter","MenuContainer","toggleDrawer","Menu_default","Drawer","anchor","role","onKeyDown","List","ListItem","button","ListItemIcon","icons_Home_default","EditFinal","handleDelete","where","ref","delete","closeEditing","_this$props","Edit","fetchPosts","idArray","editing","components_EditFinal","App","loading","tagsArray","tempShayariObject","error","container_Menu","components_Search","react_router","exact","path","render","components_Home","components_TagPage","match","params","components_Upload","components_Edit","component","Boolean","location","hostname","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1c58f9ce.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport '../styles/Home.css';\nimport { Link } from 'react-router-dom'\nimport firebase from 'firebase'\nimport Carousel from '@brainhubeu/react-carousel';\nimport '@brainhubeu/react-carousel/lib/style.css';\n\nclass Home extends Component {\n    constructor(){\n        super()\n        this.state = {\n            title: [],\n            content: [],\n            poet: [],\n            relatedTags: {},\n            pageSize: 3\n        }\n    }\n\n    componentDidMount() {\n        var titleArray = [];\n        var contentArray = [];\n        var poetArray = [];\n        var tempTagsObject = {};\n        var i = 0;\n        firebase.firestore().collection('tags').doc('sher').collection('shayaris').get()\n        .then(snap => {\n            snap.forEach(doc => {\n                titleArray.push(doc.data().title);\n                contentArray.push(doc.data().content);\n                poetArray.push(doc.data().poet);\n                Object.assign(tempTagsObject, {\n                    [i]: doc.data().tags\n                })\n                i++;\n            })\n            // this.setState(prev => ({\n            //     title: titleArray,\n            //     content: contentArray,\n            //     poet: poetArray,\n            //     relatedTags: Object.assign({}, ...prev.relatedTags)\n            // }))\n\n            this.setState({\n                title: titleArray,\n                content: contentArray,\n                poet: poetArray,\n                relatedTags: Object.assign(this.state.relatedTags, tempTagsObject)\n            })\n        })\n    }\n\n    render() {\n        const { tags } = this.props;\n        const { title, content, poet, relatedTags, pageSize } = this.state;\n        // var cx = '007954369214827889398:jybfnymzbis'; \n        // var gcse = document.createElement('script'); gcse.type = 'text/javascript'; gcse.async = true;\n        // gcse.src = (document.location.protocol === 'https' ? 'https:' : 'http:') + '//www.google.com/cse/cse.js?cx=' + cx;\n        // var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(gcse, s);\n        return (\n            <React.Fragment>\n                {/* <div className=\"gcse-search\"></div> */}\n                <h2 style={{textAlign: 'center'}}>Shayaris of the day</h2>\n                {\n                    title.slice(0, pageSize).map((title, i) => {\n                        return (\n                            <React.Fragment key={i}>\n                            <div className={`shayariCard div${i}`}>\n                                <div className={`shayariCardTitle div${i}`}>{title}</div><br/>\n                                <div className={`shayariCardContent div${i}`}>{content[i]}</div>\n                                <div className={`div${i}`} style={{textAlign: 'center'}}>\n                                    <span>{poet[i]}</span>\n                                </div>\n                            </div>\n                            <hr/>\n                            <Carousel\n                            slidesPerPage={4}\n                            slidesPerScroll={4}\n                            keepDirectionWhenDragging\n                            >\n                                {\n                                    relatedTags[i].map(tag => (\n                                    <div className='tagCards'\n                                    key={tag}>\n                                    <Link to={`/tags/${tag}`} className='tagCardLinks'>{tag}</Link>\n                                    </div>\n                                ))\n                                }\n                            </Carousel>\n                            <hr/>\n                            </React.Fragment>\n                        )\n                    })\n                }\n                {\n                    pageSize < title.length \n                    ? \n                    <div\n                    className='seeMoreDiv'\n                    onClick={e => this.setState(prev => ({pageSize: prev.pageSize + 2}))}>\n                        <span className='seeMoreSpan'>see more</span>\n                    </div>\n                    : null\n                }\n                <h2>All Tags</h2>\n                <Carousel\n                slidesPerPage={4}\n                slidesPerScroll={4}\n                keepDirectionWhenDragging\n                infinite>\n                    {\n                        tags.map(tag => (\n                        <div className='tagCards'\n                        key={tag}>\n                        <Link to={`/tags/${tag}`} className='tagCardLinks'>{tag}</Link>\n                        </div>\n                    ))\n                    }\n                </Carousel>\n                {/* {\n                    tags.map(tag => (\n                    <div className='tagCards' \n                    key={tag}>\n                    <Link to={`/tags/${tag}`}>{tag}</Link><span> {shayariObject[tag].totalShayaris}</span>\n                    </div>\n                    ))\n                } */}\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Home","import React, { Component } from 'react'\n\nexport default class Error404 extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Error404</h1>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\n\nfunction SnackbarContainer(props) {\n    const { open, message, handleClose } = props;\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{vertical: 'bottom', horizontal: 'left'}}\n                open={open}\n                onClose={handleClose}\n                message={message}\n                autoHideDuration={2000}\n            />\n        </div>\n    )\n}\n\nexport default SnackbarContainer","import React, { Component } from 'react';\nimport firebase from 'firebase';\nimport { Link } from 'react-router-dom';\nimport '../styles/TagPage.css';\nimport SnackbarContainer from '../container/Snackbar';\nimport Clipboard from 'react-clipboard.js';\nimport LabelSharpIcon from '@material-ui/icons/LabelSharp'\n\nclass TagPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            shayariObject: Object.assign({}, props.shayariObject),\n            snackbar: false,\n            pageSize: 5,\n            tagsToShow: 2\n        }\n    }\n\n    componentWillReceiveProps() {\n        var tagsToShowObject = this.props.shayariObject[this.props.tag].tagsToShowObject;\n        Object.keys(tagsToShowObject).forEach(key => tagsToShowObject[key] = this.state.tagsToShow)\n        this.setState(prev => ({\n            pageSize: 5,\n        }))\n    }\n\n    fetchContent = () => {\n        var titleArray = [];\n        var contentArray = [];\n        var poetArray = [];\n        var tempRelatedTagsObject = {};\n        var tempTagsToShowObject = {};\n        var relatedTagsArray = [];\n        if(!this.state.shayariObject[this.props.tag].titleArray.length){\n            var first = firebase.firestore().collection('tags').doc(this.props.tag).collection('shayaris').orderBy('timestamp', 'desc');\n            first.get()\n            .then(snap => {\n                var i = 0;\n                snap.forEach(doc => {\n                    var title = doc.data().title;\n                    var content = doc.data().content;\n                    var poet = doc.data().poet;\n                    relatedTagsArray = doc.data().tags;\n                    titleArray.push(title);\n                    contentArray.push(content);\n                    poetArray.push(poet);\n                    Object.assign(tempTagsToShowObject, {\n                        [i]: this.state.tags\n                    })\n                    Object.assign(tempRelatedTagsObject, {\n                        [i]: relatedTagsArray\n                    })\n                    i++;\n                })\n                this.setState(prev => ({\n                    shayariObject: Object.assign({}, prev.shayariObject, {\n                            [this.props.tag]: {\n                                ...prev.shayariObject[this.props.tag],\n                                titleArray: titleArray,\n                                contentArray: contentArray,\n                                poetArray: poetArray,\n                                relatedTagsObject: tempRelatedTagsObject,\n                                tagsToShowObject: tempTagsToShowObject\n                                }\n                            })\n                }), () => {\n                    this.props.putIntoShayariObject(this.state.shayariObject)\n                })\n            })\n        }\n    }\n\n    handleContentClick = (e, content) => {\n        // var t = '';\n        // var sel='';\n        // if (window.getSelection && (sel = window.getSelection()).modify) {\n            // var s = window.getSelection();\n            // if (s.isCollapsed) {\n                // s.modify('move', 'forward', 'character');\n                // s.modify('move', 'backward', 'word');\n                // s.modify('extend', 'forward', 'word');\n                // t = s.toString();\n                // s.modify('move', 'forward', 'character'); //clear selection\n            // }\n            // else {\n                // t = s.toString();\n            // }\n        // } else if ((sel = document.selection) && sel.type !== \"Control\") {\n            // var textRange = sel.createRange();\n            // if (!textRange.text) {\n                // textRange.expand(\"word\");\n            // }\n            // while (/\\s$/.test(textRange.text)) {\n                // textRange.moveEnd(\"character\", -1);\n            // }\n            // t = textRange.text;\n        // }\n        // console.log(t.split(' ')[0])\n\n        // fetch(`https://www.googleapis.com/customsearch/v1?key=AIzaSyBsnFSb7My_vFvacFd0339ox6A5bUPFce4&cx=007954369214827889398:jybfnymzbis&q=${t}`)\n        // .then(res => {\n        //     return res.json()\n        // })\n        // .then(res => {\n        //     console.log(res);\n        //     // console.log(res.items[0].snippet)\n        // })\n        e.target.innerHTML = content;\n    }\n\n    handleSnackbarClose = () => {\n        this.setState({\n            snackbar: false\n        })\n    }\n\n    handleCopy = () => {\n        this.setState({\n            snackbar: true\n        })\n    }\n\n    handleSeeMore = (tag, i, length) => {\n        this.setState(prev => ({\n            shayariObject: Object.assign({}, prev.shayariObject, {\n                [tag]: {\n                    ...prev.shayariObject[tag],\n                    tagsToShowObject: {\n                        ...prev.shayariObject[tag].tagsToShowObject,\n                        [i]: length\n                    }\n                }\n            })\n        }))\n    }\n\n    handleSeeLess = (tag, i) => {\n        this.setState(prev => ({\n            shayariObject: Object.assign({}, prev.shayariObject, {\n                [tag]: {\n                    ...prev.shayariObject[tag],\n                    tagsToShowObject: {\n                        ...prev.shayariObject[tag].tagsToShowObject,\n                        [i]: this.state.tagsToShow\n                    }\n                }\n            })\n        }))\n    }\n\n    render() {\n\n        const { tag } = this.props;\n        const { shayariObject, pageSize } = this.state;\n        var titleArray = shayariObject[tag].titleArray;\n        var contentArray = shayariObject[tag].contentArray;\n        var poetArray = shayariObject[tag].poetArray;\n        var tagsObject = shayariObject[tag].relatedTagsObject;\n        var tagsToShowObject = shayariObject[tag].tagsToShowObject;\n        const labelIconStyle = {\n            fontSize: '22px'\n        }\n        return (\n            <div id='tagPage'>\n                <h2 style={{textAlign: 'center', textTransform: 'capitalize'}}>{tag}</h2>\n                <hr/>\n                {\n                    shayariObject[tag].titleArray.length ?\n                    titleArray.slice(0,pageSize).map((title, i) => (\n                        <React.Fragment key={i}>\n                        <div className={`shayariCard div${i}`}>\n                            <div className={`shayariCardHeader div${i}`}>\n                                <Clipboard \n                                className='copyBtn'\n                                data-clipboard-text={\n                                    titleArray[i].charAt(0).toUpperCase() + titleArray[i].slice(1) + '\\n' \n                                    + contentArray[i].charAt(0).toUpperCase() + contentArray[i].slice(1) \n                                    + '\\nbestshayaris.com'}\n                                onClick={this.handleCopy}>\n                                copy\n                                </Clipboard>\n                            </div>\n                            <div className={`div${i} shayariCardTitle`}>\n                                {title.charAt(0).toUpperCase() + title.slice(1)}\n                            </div>\n                            <br/>\n                            <div \n                            className={`div${i} shayariCardContent`} \n                            onClick={e => this.handleContentClick(e, contentArray[i])}>\n                                {contentArray[i].length > 200 ? contentArray[i].substring(0,200) + '....' : contentArray[i]}\n                            </div>\n                            <div className='shayariCardPoet'>\n                                <span>{poetArray[i]}</span>\n                            </div>\n                            <div className='shayariCardLinks'>\n                                <LabelSharpIcon style={labelIconStyle} />\n                                {tagsObject[i].slice(0, tagsToShowObject[i]).map((tag, i) => (\n                                    <React.Fragment key={tag}>\n                                        <Link to={`./${tag}`} className='relatedLinks'>{i === 0 ? null : ','}{tag}</Link>\n                                    </React.Fragment>\n                                ))}\n                                {\n                                    tagsToShowObject[i] < tagsObject[i].length\n                                    ? <span onClick={() => this.handleSeeMore(tag, i, tagsObject[i].length)} className='seeMore'>see more</span>\n                                    : <span onClick={() => this.handleSeeLess(tag, i)} className='seeLess'>see less</span>\n                                }\n                                \n                            </div>\n                            <br/>\n                        </div>\n                        <hr/>\n                        </React.Fragment>\n                    ))\n                    :\n                    this.fetchContent()\n                }\n                {\n                    shayariObject[tag].totalShayaris > pageSize\n                    ?\n                    <div \n                    className='seeMoreDiv' \n                    onClick={() => this.setState(prev => ({pageSize: prev.pageSize + 5}))}\n                    >\n                    <span className='seeMoreSpan'>See more</span>\n                    </div>\n                    : null\n                }\n                <SnackbarContainer open={this.state.snackbar} message='copied.' handleClose={this.handleSnackbarClose} />\n            </div>\n        )\n    }\n}\n\nexport default TagPage","import React, { Component } from 'react'\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport firebase from 'firebase'\nimport '../styles/Upload.css'\n\nclass Upload extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            authenticated: false,\n            password: '',\n            title: '',\n            content: '',\n            poet: '',\n            tags: [],\n            newTagInput: false,\n            newTagInputValue: '',\n            uploading: false\n        }\n    }\n\n    componentDidMount(){\n        firebase.firestore().collection('users').doc('auth').get()\n        .then(doc => {\n            this.setState({\n                password: doc.data().password\n            })\n        })\n    }\n\n    handleTagChange = (e) => {\n        this.setState(prev => ({\n            tags: e.target.value\n        }))\n    }\n\n    handleTitleChange = (e) => {\n        this.setState({\n            title: e.target.value\n        })\n    }\n\n    handleContentChange = (e) => {\n        this.setState({\n            content: e.target.value\n        })\n    }\n\n    handlePoetChange = (e) => {\n        this.setState({\n            poet: e.target.value\n        })\n    }\n\n    upload = () => {\n        var tags = this.state.tags;\n        var title = this.state.title;\n        var content = this.state.content;\n        var poet = this.state.poet;\n        if(tags){\n            if(title){\n                if(content){\n                    this.setState({\n                        uploading: true\n                    })\n                    if(this.state.newTagInputValue !== ''){                 //there is a new tag\n                        this.setState(prev => ({\n                            tags: [...prev.tags, this.state.newTagInputValue]\n                        }))\n                        firebase.firestore().collection('tags').doc(this.state.newTagInputValue).set({\n                            totalShayaris: 0\n                        })\n                        .then(() => {\n                            //upload\n                            this.state.tags.forEach((tag, i) => {\n                                firebase.firestore().collection('tags').doc(tag).update({\n                                    totalShayaris: firebase.firestore.FieldValue.increment(1)\n                                })\n                                .then(() => {\n                                    firebase.firestore().collection('tags').doc(tag).collection('shayaris').doc().set({\n                                        title: title,\n                                        content: content,\n                                        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                                        tags: this.state.tags,\n                                        poet: poet\n                                    })\n                                    .then(() => {\n                                        if(i === this.state.tags.length-1){\n                                            this.setState({\n                                                title: '',\n                                                content: '',\n                                                poet: '',\n                                                tags: [],\n                                                newTagInput: false,\n                                                newTagInputValue: '',\n                                                uploading: false\n                                            })\n                                            alert('uploaded');\n                                        }\n                                    })\n                                })\n                                .catch(err => {\n                                    alert('cannot upload due to some error.')\n                                })\n                            })\n                        })\n                    } else {                    //there is no new tag\n                        this.state.tags.forEach((tag, i) => {\n                            firebase.firestore().collection('tags').doc(tag).update({\n                                totalShayaris: firebase.firestore.FieldValue.increment(1)\n                            })\n                            .then(() => {\n                                firebase.firestore().collection('tags').doc(tag).collection('shayaris').doc().set({\n                                    title: title,\n                                    content: content,\n                                    poet: poet,\n                                    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                                    tags: this.state.tags,\n                                })\n                                .then(() => {\n                                    if(i === this.state.tags.length-1){\n                                        this.setState({\n                                            title: '',\n                                            content: '',\n                                            poet: '',\n                                            tags: [],\n                                            newTagInput: false,\n                                            newTagInputValue: '',\n                                            uploading: false\n                                        })\n                                        alert('uploaded');\n                                    }\n                                })\n                            })\n                            .catch(err => {\n                                alert('cannot upload due to some error.')\n                            })\n                        })   \n                    }\n                }else {\n                    alert('error')\n                }\n            } else {\n                alert('error')\n            }\n        }else {\n            alert('error')\n        }\n    }\n\n    showNewTagInput = () => {\n        this.setState({\n            newTagInput: !this.state.newTagInput\n        })\n    }\n\n    handleNewTag = (e) => {\n        this.setState({\n            newTagInputValue: e.target.value\n        })\n    }\n\n    authMe = (e) => {\n        if(this.state.password !== ''){\n            if(this.state.password === e.target.value) {\n                this.setState({\n                    authenticated: true\n                })\n            }\n        }\n    }\n\n    render() {\n        return (\n            !this.state.authenticated \n            ? <input placeholder='password' onChange={(e) => this.authMe(e)}></input>\n            :\n            <div style={{textAlign: 'center'}}>\n                <FormControl>\n                    <InputLabel htmlFor=\"select-multiple-chip\">Tag</InputLabel>\n                    <Select\n                      multiple\n                      value={this.state.tags}\n                      onChange={e => this.handleTagChange(e)}\n                      input={<Input id=\"select-multiple-checkbox\" />}\n                      renderValue={selected => selected.join(', ')}\n                    >\n                        {this.props.tags.map(tag => (\n                          <MenuItem key={tag} value={tag}>\n                          <Checkbox checked={this.state.tags.indexOf(tag) > -1} />\n                          <ListItemText primary={tag} />\n                          </MenuItem>\n                        ))}\n                    </Select>\n                    <button className='newTagBtn' onClick={this.showNewTagInput}>New Tag</button>\n\n                    {\n                        this.state.newTagInput ?\n                        <TextField\n                            label=\"New Tag\"\n                            placeholder=\"type your tag\"\n                            value={this.state.newTagInputValue}\n                            onChange={this.handleNewTag}\n                          /> :\n                          null\n                    }\n                  <TextField\n                      label=\"Title\"\n                      placeholder=\"Choose title wisely\"\n                      margin=\"normal\"\n                      value={this.state.title}\n                      onChange={e => this.handleTitleChange(e)}\n                    />\n                  <TextField\n                      label=\"Content\"\n                      placeholder=\"Write beyond imagination\"\n                      multiline\n                      margin=\"normal\"\n                      value={this.state.content}\n                      onChange={e => this.handleContentChange(e)}\n                    />\n                  <TextField\n                      label=\"Poet\"\n                      placeholder=\"Poet\"\n                      margin=\"normal\"\n                      value={this.state.poet}\n                      onChange={e => this.handlePoetChange(e)}\n                    />\n                    <button type='submit' onClick={this.upload} className='uploadBtn' disabled={this.state.uploading}>Upload</button>\n                </FormControl>\n            </div>\n        )\n    }\n}\n\nexport default Upload","import React, { Component } from 'react';\nimport '../styles/Search.css';\nimport { Link, withRouter } from 'react-router-dom';\n\nclass Search extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            searching: false,\n            searchingWord: '',\n            searchingList: props.tags\n        }\n    }\n    \n      handleInputFocus = (e) => {\n        this.setState({\n          searching: true\n        })\n      }\n    \n      handleInputChange = (e) => {\n        this.setState({\n            searchingWord: e.target.value,\n            searchingList: this.props.tags.filter(tag => {\n                return tag.indexOf(e.target.value.toLowerCase()) !== -1\n            })\n        })\n      }\n\n    render() {\n      const focusStyle = {\n        position: 'absolute',\n        border: 'none',\n        left: '0',\n        width: '100%',\n        margin: '0',\n        height: '35px',\n\n      }\n      const style = {\n        position: 'absolute',\n        width: '20%',\n        right: '0',\n        margin: '6px',\n        height: '25px',\n        fontSize: '16px',\n        border: '1px solid black',\n        paddingLeft: '5px',\n        transition: '.4s',\n        boxShadow: '1px 1px 3px'\n      }\n        return (\n            <React.Fragment>\n                  {\n                    this.state.searching\n                    ? window.addEventListener('popstate', () => this.setState({searching: false, searchingWord: ''}))\n                    : null\n                  }\n                  <input\n                  style={this.state.searching ? focusStyle : style}\n                  placeholder='search...'\n                  maxLength='20'\n                  onClick={(e) => this.setState({searching: true, searchingWord: e.target.value})}\n                  value={this.state.searchingWord} \n                  onChange={e => this.handleInputChange(e)}/>\n                {\n                    !this.state.searching ? null :\n                    <div id='searchingListParent'>\n                      <ul className='searchingList' onClick={() => this.setState({searching: false, searchingWord: '', searchingList: this.props.tags})}>\n                        {\n                          this.state.searchingList.map((tag, i) => (\n                            <Link key={tag} to={`/tags/${tag}`} className='searchingListItemLink'>\n                                <li className='searchingListItem'>{tag}</li>\n                            </Link>\n                          ))\n                        }\n                      </ul>\n                    </div> \n                }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withRouter(Search)","import React, { Component } from 'react';\nimport Menu from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { Link } from 'react-router-dom';\n\nclass MenuContainer extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            open: false\n        }\n    }\n\n    toggleDrawer = () => {\n      this.setState({\n        open: !this.state.open\n      })\n    }\n\n    render() {\n        const list = () => (\n            <div\n              role=\"presentation\"\n              onClick={() => this.toggleDrawer()}\n              onKeyDown={() => this.toggleDrawer()}\n            >\n              <List>\n                  <ListItem button>\n                    <ListItemIcon><HomeIcon/></ListItemIcon>\n                    <ListItemText><Link to='/' className='drawerTextLink'>Home</Link></ListItemText>\n                  </ListItem>\n              </List>\n            </div>\n          );\n          \n        return (\n            <React.Fragment>\n\n                <Menu fontSize='large' onClick={this.toggleDrawer} />\n\n                <Drawer anchor='left' open={this.state.open} onClose={this.toggleDrawer}>\n                  {list()}\n                </Drawer>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default MenuContainer;","import React, { Component } from 'react'\nimport firebase from 'firebase'\n\nclass EditFinal extends Component {\n\n    handleDelete = e => {\n        this.props.relatedTags.forEach((tag, i) => {\n            var ref = firebase.firestore().collection('tags').doc(tag).collection('shayaris').where('content', '==' , this.props.content);\n            ref.get()\n            .then(snap => {\n                snap.forEach(doc => {\n                    doc.ref.delete()\n                    .then(() => {\n                        firebase.firestore().collection('tags').doc(tag).update({\n                            totalShayaris: firebase.firestore.FieldValue.increment(-1)\n                        })\n                        .then(() => {\n                            if(i === this.props.relatedTags.length-1){\n                                this.props.closeEditing()\n                            }\n                        })\n                    })\n                    .catch(err => {\n                        alert(err.message)\n                    })\n                })\n            })\n        })\n    }\n\n    render() {\n        const { title, content, relatedTags } = this.props;\n        return (\n            <div>\n                <div id='editTitle'>{title}</div>\n                <div id='editContent'>{content}</div>\n                <div>{relatedTags.join(', ')}</div>\n                <button onClick={e => this.handleDelete(e)}>Delete</button>\n            </div>\n        )\n\n    }\n}\n\nexport default EditFinal","import React, { Component } from 'react'\nimport firebase from 'firebase'\nimport EditFinal from './EditFinal';\nimport SnackbarContainer from '../container/Snackbar';\n\nclass Edit extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            tag: '',\n            title: [],\n            content: [],\n            id: [],\n            authenticated: false,\n            password: '',\n            relatedTags: {},\n            editing: false,\n            i: -1,\n            open: false,\n            message: ''\n        }\n    }\n\n    componentDidMount(){\n        firebase.firestore().collection('users').doc('auth').get()\n        .then(doc => {\n            this.setState({\n                password: doc.data().password\n            })\n        })\n    }\n    \n    handleTagChange = (e) => {\n        this.setState({\n            tag: e.target.value\n        })\n    }\n\n    fetchPosts = () => {\n        var titleArray = [];\n        var contentArray = [];\n        var idArray = [];\n        var tempTagsObject = {};\n        firebase.firestore().collection('tags').doc(this.state.tag).collection('shayaris').get()\n        .then(snap => {\n            var i = 0;\n            snap.forEach(doc => {\n                titleArray.push(doc.data().title)\n                contentArray.push(doc.data().content)\n                idArray.push(doc.id)\n                Object.assign(tempTagsObject, {\n                    [i]: doc.data().tags\n                })\n                i++;\n            })\n            this.setState(prev => ({\n                title: titleArray,\n                content: contentArray,\n                id: idArray,\n                relatedTags: tempTagsObject\n            }))\n        })\n    }\n\n    authMe = (e) => {\n        if(this.state.password !== ''){\n            if(this.state.password === e.target.value) {\n                this.setState({\n                    authenticated: true\n                })\n            }\n        }\n    }\n\n    closeEditing = () => {\n        this.setState({\n            editing: false,\n            open: true,\n            message: 'successfully deleted',\n            title: [],\n            content: [],\n            id: [],\n            relatedTags: {}\n        })\n    }\n\n    handleSnackbarClose = () => {\n        this.setState({\n            open: false,\n            message: ''\n        })\n    }\n\n    render() {\n        const { i, title, content, relatedTags, id, tag} = this.state;\n        return (\n            !this.state.authenticated \n            ? <input placeholder='password' onChange={(e) => this.authMe(e)}></input>\n            :\n            this.state.editing\n            ? <EditFinal tag={tag} relatedTags={relatedTags[i]} title={title[i]} content={content[i]} id={id[i]} closeEditing={this.closeEditing} />\n            : <div>\n            <select value={tag} onChange={e => this.handleTagChange(e)}>\n                {\n                    <option value=''>--select a tag--</option>\n                }\n                {\n                    this.props.tags.map((tag, i) => (\n                        <option key={i} value={tag}>{tag}</option>\n                    ))\n                }\n            </select>\n            <button onClick={this.fetchPosts} disabled={!tag}>Fetch posts</button>\n\n            {\n                title.map((title, i) => {\n                    return (\n                        <React.Fragment key={title}>\n                        <div className={`div${i}`} onClick={(e) => this.setState({editing: true, i: i})}>\n                            <div className={`div${i}`}>{title}</div>\n                            <br/>\n                            <div className={`div${i}`}>{content[i]}</div>\n                            <div>{relatedTags[i].join(', ')}</div>\n                        </div>\n                        <hr/>\n                        </React.Fragment>\n                    )\n                })\n            }\n            <SnackbarContainer open={this.state.open} message={this.state.message} handleClose={this.handleSnackbarClose} />\n        </div>\n        )\n    }\n}\n\nexport default Edit","import React, { Component } from 'react';\nimport './App.css'\nimport { HashRouter, Switch, Route, Link } from 'react-router-dom'\nimport Home from './components/Home';\nimport Error404 from './components/Error404';\nimport firebase from 'firebase'\nimport TagPage from './components/TagPage';\nimport Upload from './components/Upload';\nimport Search from './components/Search';\nimport MenuContainer from './container/Menu';\nimport Edit from './components/Edit';\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n        tags: [],\n        loading: true,\n        shayariObject: {}\n    }\n  }\n\n  componentDidMount() {\n    var tagsArray = [];\n    var tempShayariObject = {};\n    var totalShayaris = 0;\n    firebase.firestore().collection('tags').get()\n    .then(snap => {\n      snap.forEach(doc => {\n        var tag =  doc.id;\n        totalShayaris = doc.data().totalShayaris;\n        tagsArray.push(tag)\n        tempShayariObject[tag] = {\n          titleArray: [],\n          totalShayaris: totalShayaris\n        }\n      })\n      tagsArray.forEach(tag => {\n        tempShayariObject[tag].relatedTagsObject = {};\n        for(let i=0; i<totalShayaris; i++){\n          tempShayariObject[tag].relatedTagsObject[i] = [];\n        }\n      })\n      this.setState(prev => ({\n        tags: tagsArray,\n        loading: false,\n        shayariObject: Object.assign({}, prev.shayariObject, tempShayariObject)\n      }))\n    })\n    .catch(error => {\n      alert('your internet connection is slow.We cannot fetch data.')\n    })\n  }\n\n  putIntoShayariObject = (shayariObject) => {\n    this.setState(prev => ({\n      shayariObject: Object.assign(prev.shayariObject, shayariObject)\n    }))\n  }\n\n  render() {\n    const { tags, shayariObject } = this.state;\n\n    return (\n      this.state.loading ? <h1>loading</h1> :\n      <div className=\"App\">\n      <HashRouter>\n      <div \n      className='header'>\n        <MenuContainer />\n        <span className='headerName'><Link to='/' className='link'>𝓫𝓮𝓼𝓽𝓼𝓱𝓪𝔂𝓪𝓻𝓲𝓼.𝓬𝓸𝓶</Link><span></span></span>\n        <Search tags={tags} />\n      </div>\n\n      <Switch>\n        <Route exact path='/' render={props => <Home tags={tags} />} />\n\n        <Route path='/tags/:tag' render={props => \n        <TagPage \n        tag={props.match.params.tag}\n        shayariObject={shayariObject}\n        putIntoShayariObject={this.putIntoShayariObject} />} />\n\n        <Route exact path='/upload' render={props => <Upload tags={tags} />} />\n        <Route exact path='/edit' render={props => <Edit tags={tags} />} />\n\n        <Route path='*' component={Error404} />\n      </Switch>\n      </HashRouter>\n    </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from 'firebase'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCEMfOB5_j1hIdpxVXOduBuUMTwj5txVZo\",\n    authDomain: \"bestshayari-7f672.firebaseapp.com\",\n    databaseURL: \"https://bestshayari-7f672.firebaseio.com\",\n    projectId: \"bestshayari-7f672\",\n    storageBucket: \"bestshayari-7f672.appspot.com\",\n    messagingSenderId: \"1001640034721\",\n    appId: \"1:1001640034721:web:251a9065628579fe518be0\",\n    measurementId: \"G-EQP9800NT3\"\n};\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}