{"version":3,"sources":["components/Home.js","components/Error404.js","container/Snackbar.js","components/TagPage.js","components/Upload.js","components/Search.js","App.js","serviceWorker.js","index.js"],"names":["Home","tags","this","props","react_default","a","createElement","Fragment","map","tag","className","key","react_router_dom","to","concat","Component","Error404","SnackbarContainer","open","message","handleClose","Snackbar","anchorOrigin","vertical","horizontal","onClose","autoHideDuration","TagPage","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","fetchContent","titleArray","contentArray","tempRelatedTagsObject","relatedTagsArray","state","shayariObject","length","firebase","firestore","collection","doc","orderBy","get","then","snap","i","forEach","title","data","content","push","assign","defineProperty","setState","prev","objectSpread","relatedTagsObject","putIntoShayariObject","handleContentClick","e","target","innerHTML","handleSnackbarClose","snackbar","handleCopy","_this2","tagsObject","style","textAlign","react_clipboard_default","data-clipboard-text","onClick","substring","LocalOffer_default","container_Snackbar","Upload","handleTagChange","value","handleTitleChange","handleContentChange","upload","uploading","newTagInputValue","toConsumableArray","set","totalShayaris","update","FieldValue","increment","timestamp","serverTimestamp","newTagInput","alert","catch","err","showNewTagInput","handleNewTag","FormControl","InputLabel","htmlFor","Select","multiple","onChange","input","Input","id","renderValue","selected","join","MenuItem","Checkbox","checked","indexOf","ListItemText","primary","TextField","label","placeholder","margin","multiline","type","disabled","Search","handleInputFocus","searching","handleInputChange","searchingWord","searchingList","filter","float","maxLength","onFocus","App","toggleDrawer","drawer","loading","tagsArray","tempShayariObject","error","_this3","Menu_default","fontSize","components_Search","react_router","exact","path","render","components_Home","components_TagPage","match","params","components_Upload","component","Drawer","anchor","role","onKeyDown","List","ListItem","button","ListItemIcon","icons_Home_default","Boolean","window","location","hostname","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d5bee98f.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport '../styles/Home.css';\nimport { Link } from 'react-router-dom'\n\nclass Home extends Component {\n\n    render() {\n        const { tags } = this.props;\n        return (\n            <React.Fragment>\n                {\n                    tags.map(tag => (\n                    <div className='tagCards' \n                    key={tag}>\n                    <Link to={`/tags/${tag}`}>{tag}</Link>\n                    </div>\n                    ))\n                }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Home","import React, { Component } from 'react'\n\nexport default class Error404 extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Error404</h1>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\n\nfunction SnackbarContainer(props) {\n    const { open, message, handleClose } = props;\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{vertical: 'bottom', horizontal: 'left'}}\n                open={open}\n                onClose={handleClose}\n                message={message}\n                autoHideDuration={2000}\n            />\n        </div>\n    )\n}\n\nexport default SnackbarContainer","import React, { Component } from 'react';\nimport firebase from 'firebase';\nimport { Link } from 'react-router-dom';\nimport '../styles/TagPage.css';\nimport SnackbarContainer from '../container/Snackbar';\nimport Clipboard from 'react-clipboard.js';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer'\n\nclass TagPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            shayariObject: Object.assign({}, props.shayariObject),\n            snackbar: false\n        }\n    }\n\n    fetchContent = () => {\n        var titleArray = [];\n        var contentArray = [];\n        var tempRelatedTagsObject = {};\n        var relatedTagsArray = [];\n        if(!this.state.shayariObject[this.props.tag].titleArray.length){\n            firebase.firestore().collection('tags').doc(this.props.tag).collection('shayaris').orderBy('timestamp', 'desc').get()\n            .then(snap => {\n                var i = 0;\n                snap.forEach(doc => {\n                    var title = doc.data().title;\n                    var content = doc.data().content;\n                    relatedTagsArray = doc.data().tags;\n                    titleArray.push(title);\n                    contentArray.push(content);\n                    Object.assign(tempRelatedTagsObject, {\n                        [i]: relatedTagsArray\n                    })\n                    i++;\n                })\n                this.setState(prev => ({\n                    shayariObject: Object.assign({}, prev.shayariObject, {\n                            [this.props.tag]: {\n                                ...prev.shayariObject[this.props.tag],\n                                titleArray: titleArray,\n                                contentArray: contentArray,\n                                relatedTagsObject: tempRelatedTagsObject\n                            }\n                    })\n                }), () => {\n                    this.props.putIntoShayariObject(this.state.shayariObject)\n                })\n            })\n        }\n    }\n\n    handleContentClick = (e, content) => {\n        e.target.innerHTML = content;\n    }\n\n    handleSnackbarClose = () => {\n        this.setState({\n            snackbar: false\n        })\n    }\n\n    handleCopy = () => {\n        this.setState({\n            snackbar: true\n        })\n    }\n\n    render() {\n        const { tag } = this.props;\n        const { shayariObject } = this.state;\n        var titleArray = shayariObject[tag].titleArray;\n        var contentArray = shayariObject[tag].contentArray;\n        var tagsObject = shayariObject[tag].relatedTagsObject;\n        return (\n            <div>\n                <h2 style={{textAlign: 'center'}}>{tag}</h2>\n                <hr/>\n                {\n                    shayariObject[tag].titleArray.length ?\n                    titleArray.map((title, i) => (\n                        <React.Fragment key={i}>\n                        <div className={`shayariCard div${i}`}>\n                            <div className={`shayariCardHeader div${i}`}>\n                                <Clipboard className='copyBtn'\n                                data-clipboard-text={contentArray[i]}\n                                onClick={this.handleCopy}>\n                                copy\n                                </Clipboard>\n                            </div>\n                            <div className={`div${i} shayariCardTitle`}>\n                                {title}\n                            </div>\n                            <div className={`div${i}`} onClick={e => this.handleContentClick(e, contentArray[i])}>\n                                {contentArray[i].length > 100 ? contentArray[i].substring(0,100)+'....' : contentArray[i]}\n                            </div>\n                            <div>\n                                <LocalOfferIcon />\n                                {tagsObject[i].map((tag, i) => (\n                                <React.Fragment key={tag}>\n                                \n                                    <Link to={`./${tag}`} className='relatedLinks'>{tag}</Link>\n                                    &ensp;\n                                </React.Fragment>\n                            ))}\n                            </div>\n                        </div>\n                        <hr/>\n                        </React.Fragment>\n                    ))\n                    :\n                    this.fetchContent()\n                }\n                <SnackbarContainer open={this.state.snackbar} message='copied.' handleClose={this.handleSnackbarClose} />\n            </div>\n        )\n    }\n}\n\nexport default TagPage","import React, { Component } from 'react'\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport firebase from 'firebase'\nimport '../styles/Upload.css'\n\nclass Upload extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            title: '',\n            content: '',\n            tags: [],\n            newTagInput: false,\n            newTagInputValue: '',\n            uploading: false\n        }\n    }\n\n    handleTagChange = (e) => {\n        this.setState(prev => ({\n            tags: e.target.value\n        }))\n    }\n\n    handleTitleChange = (e) => {\n        this.setState({\n            title: e.target.value\n        })\n    }\n\n    handleContentChange = (e) => {\n        this.setState({\n            content: e.target.value\n        })\n    }\n\n    upload = () => {\n        var tags = this.state.tags;\n        var title = this.state.title;\n        var content = this.state.content;\n        if(tags){\n            if(title){\n                if(content){\n                    this.setState({\n                        uploading: true\n                    })\n                    if(this.state.newTagInputValue !== ''){                 //there is a new tag\n                        this.setState(prev => ({\n                            tags: [...prev.tags, this.state.newTagInputValue]\n                        }))\n                        firebase.firestore().collection('tags').doc(this.state.newTagInputValue).set({\n                            totalShayaris: 0\n                        })\n                        .then(() => {\n                            //upload\n                            this.state.tags.forEach((tag, i) => {\n                                firebase.firestore().collection('tags').doc(tag).update({\n                                    totalShayaris: firebase.firestore.FieldValue.increment(1)\n                                })\n                                .then(() => {\n                                    firebase.firestore().collection('tags').doc(tag).collection('shayaris').doc().set({\n                                        title: title,\n                                        content: content,\n                                        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                                        tags: this.state.tags\n                                    })\n                                    .then(() => {\n                                        if(i === this.state.tags.length-1){\n                                            this.setState({\n                                                title: '',\n                                                content: '',\n                                                tags: [],\n                                                newTagInput: false,\n                                                newTagInputValue: '',\n                                                uploading: false\n                                            })\n                                            alert('uploaded');\n                                        }\n                                    })\n                                })\n                                .catch(err => {\n                                    alert('cannot upload due to some error.')\n                                })\n                            })\n                        })\n                    } else {                    //there is no new tag\n                        this.state.tags.forEach((tag, i) => {\n                            firebase.firestore().collection('tags').doc(tag).update({\n                                totalShayaris: firebase.firestore.FieldValue.increment(1)\n                            })\n                            .then(() => {\n                                firebase.firestore().collection('tags').doc(tag).collection('shayaris').doc().set({\n                                    title: title,\n                                    content: content,\n                                    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                                    tags: this.state.tags\n                                })\n                                .then(() => {\n                                    if(i === this.state.tags.length-1){\n                                        this.setState({\n                                            title: '',\n                                            content: '',\n                                            tags: [],\n                                            newTagInput: false,\n                                            newTagInputValue: '',\n                                            uploading: false\n                                        })\n                                        alert('uploaded');\n                                    }\n                                })\n                            })\n                            .catch(err => {\n                                alert('cannot upload due to some error.')\n                            })\n                        })   \n                    }\n                }else {\n                    alert('error')\n                }\n            } else {\n                alert('error')\n            }\n        }else {\n            alert('error')\n        }\n    }\n\n    showNewTagInput = () => {\n        this.setState({\n            newTagInput: !this.state.newTagInput\n        })\n    }\n\n    handleNewTag = (e) => {\n        this.setState({\n            newTagInputValue: e.target.value\n        })\n    }\n\n    render() {\n        return (\n            <div style={{textAlign: 'center'}}>\n                <FormControl>\n                    <InputLabel htmlFor=\"select-multiple-chip\">Tag</InputLabel>\n                    <Select\n                      multiple\n                      value={this.state.tags}\n                      onChange={e => this.handleTagChange(e)}\n                      input={<Input id=\"select-multiple-checkbox\" />}\n                      renderValue={selected => selected.join(', ')}\n                    >\n                        {this.props.tags.map(tag => (\n                          <MenuItem key={tag} value={tag}>\n                          <Checkbox checked={this.state.tags.indexOf(tag) > -1} />\n                          <ListItemText primary={tag} />\n                          </MenuItem>\n                        ))}\n                    </Select>\n                    <button className='newTagBtn' onClick={this.showNewTagInput}>New Tag</button>\n\n                    {\n                        this.state.newTagInput ?\n                        <TextField\n                            label=\"New Tag\"\n                            placeholder=\"type your tag\"\n                            value={this.state.newTagInputValue}\n                            onChange={this.handleNewTag}\n                          /> :\n                          null\n                    }\n                  <TextField\n                      id=\"standard-textarea\"\n                      label=\"Title\"\n                      placeholder=\"Choose title wisely\"\n                      margin=\"normal\"\n                      value={this.state.title}\n                      onChange={e => this.handleTitleChange(e)}\n                    />\n                  <TextField\n                      id=\"standard-textarea\"\n                      label=\"Content\"\n                      placeholder=\"Write beyond imagination\"\n                      multiline\n                      margin=\"normal\"\n                      value={this.state.content}\n                      onChange={e => this.handleContentChange(e)}\n                    />\n                    <button type='submit' onClick={this.upload} className='uploadBtn' disabled={this.state.uploading}>Upload</button>\n                </FormControl>\n            </div>\n        )\n    }\n}\n\nexport default Upload","import React, { Component } from 'react';\nimport '../styles/Search.css';\nimport { Link } from 'react-router-dom';\nimport SearchIcon from '@material-ui/icons/Search'\n\nclass Search extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            searching: false,\n            searchingWord: '',\n            searchingList: props.tags\n        }\n    }\n    \n      handleInputFocus = (e) => {\n        this.setState({\n          searching: true\n        })\n      }\n    \n      handleInputChange = (e) => {\n        this.setState({\n            searchingWord: e.target.value,\n            searchingList: this.props.tags.filter(tag => {\n                return tag.indexOf(e.target.value) !== -1\n            })\n        })\n      }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div style={{float: 'left'}}>\n                  <input className='headerSearchInput'\n                  placeholder='search...'\n                  maxLength='20'\n                  value={this.state.searchingWord}\n                  onFocus={e => this.handleInputFocus(e)} \n                  onChange={e => this.handleInputChange(e)}/>\n                </div>\n                {\n                    !this.state.searching ? null :\n                    <div id='searchingListParent'>\n                      <ul className='searchingList' onClick={() => this.setState({searching: false, searchingWord: '', searchingList: this.props.tags})}>\n                        {\n                          this.state.searchingList.map((tag, i) => (\n                            <Link key={tag} to={`/tags/${tag}`} className='searchingListItemLink'>\n                                <li className='searchingListItem'>{tag}</li>\n                            </Link>\n                          ))\n                        }\n                      </ul>\n                    </div> \n                }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Search","import React, { Component } from 'react';\nimport './App.css'\nimport { HashRouter, Switch, Route, Link } from 'react-router-dom'\nimport Home from './components/Home';\nimport Error404 from './components/Error404';\nimport Menu from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport firebase from 'firebase'\nimport TagPage from './components/TagPage';\nimport Upload from './components/Upload';\nimport Search from './components/Search';\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n        tags: [],\n        drawer: false,\n        loading: true,\n        shayariObject: {},\n        searching: '',\n        searchingList: []\n    }\n  }\n\n  componentDidMount() {\n    var tagsArray = [];\n    var tempShayariObject = {};\n    var totalShayaris = 0;\n    firebase.firestore().collection('tags').get()\n    .then(snap => {\n      snap.forEach(doc => {\n        var tag =  doc.id;\n        totalShayaris = doc.data().totalShayaris;\n        tagsArray.push(tag)\n        tempShayariObject[tag] = {\n          titleArray: [],\n          contentArray: [],\n        }\n      })\n      tagsArray.forEach(tag => {\n        tempShayariObject[tag].relatedTagsObject = {};\n        for(let i=0; i<totalShayaris; i++){\n          tempShayariObject[tag].relatedTagsObject[i] = [];\n        }\n      })\n      this.setState(prev => ({\n        tags: tagsArray,\n        loading: false,\n        shayariObject: Object.assign({}, prev.shayariObject, tempShayariObject),\n        searchingList: tagsArray\n      }))\n    })\n    .catch(error => {\n      alert(error.message)\n    })\n  }\n\n  putIntoShayariObject = (shayariObject) => {\n    this.setState(prev => ({\n      shayariObject: Object.assign(prev.shayariObject, shayariObject)\n    }))\n  }\n\n  toggleDrawer = () => {\n    this.setState({\n      drawer: !this.state.drawer\n    })\n  }\n\n  render() {\n    const list = () => (\n      <div\n        role=\"presentation\"\n        onClick={() => this.toggleDrawer()}\n        onKeyDown={() => this.toggleDrawer()}\n      >\n        <List>\n            <ListItem button>\n              <ListItemIcon><HomeIcon/></ListItemIcon>\n              <ListItemText><Link to='/' className='drawerTextLink'>Home</Link></ListItemText>\n            </ListItem>\n        </List>\n      </div>\n    );\n\n    return (\n      this.state.loading ? <h1>loading</h1> :\n      <div className=\"App\">\n      <HashRouter>\n      <div \n      className='header'>\n        <Menu fontSize='large' onClick={this.toggleDrawer}\n        className='headerMenuIcon' />\n        <span className='headerName'><Link to='/' className='link'>𝓫𝓮𝓼𝓽𝓼𝓱𝓪𝔂𝓪𝓻𝓲𝓼.𝓬𝓸𝓶</Link></span>\n        <Search tags={this.state.tags} />\n      </div>\n\n      <Switch>\n        <Route exact path='/' render={props => <Home tags={this.state.tags} />} />\n\n        <Route path='/tags/:tag' render={props => \n        <TagPage \n        tag={props.match.params.tag}\n        shayariObject={this.state.shayariObject}\n        putIntoShayariObject={this.putIntoShayariObject} />} />\n\n        <Route exact path='/upload' render={props => <Upload tags={this.state.tags} />} />\n\n        <Route path='*' component={Error404} />\n      </Switch>\n\n      <Drawer anchor='left' open={this.state.drawer} onClose={this.toggleDrawer}>\n          {list()}\n      </Drawer>\n      </HashRouter>\n    </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from 'firebase'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCEMfOB5_j1hIdpxVXOduBuUMTwj5txVZo\",\n    authDomain: \"bestshayari-7f672.firebaseapp.com\",\n    databaseURL: \"https://bestshayari-7f672.firebaseio.com\",\n    projectId: \"bestshayari-7f672\",\n    storageBucket: \"bestshayari-7f672.appspot.com\",\n    messagingSenderId: \"1001640034721\",\n    appId: \"1:1001640034721:web:251a9065628579fe518be0\",\n    measurementId: \"G-EQP9800NT3\"\n};\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}