{"version":3,"sources":["components/Home.js","components/Error404.js","container/Snackbar.js","components/TagPage.js","components/Upload.js","components/Search.js","container/Menu.js","components/EditFinal.js","components/Edit.js","App.js","serviceWorker.js","index.js"],"names":["Home","_this$props","this","props","tags","shayariObject","react_default","a","createElement","Fragment","map","tag","className","key","react_router_dom","to","concat","totalShayaris","Component","Error404","SnackbarContainer","open","message","handleClose","Snackbar","anchorOrigin","vertical","horizontal","onClose","autoHideDuration","TagPage","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","fetchContent","titleArray","contentArray","poetArray","tempRelatedTagsObject","tempTagsToShowObject","relatedTagsArray","state","length","firebase","firestore","collection","doc","orderBy","get","then","snap","i","forEach","title","data","content","poet","push","assign","defineProperty","setState","prev","objectSpread","relatedTagsObject","tagsToShowObject","putIntoShayariObject","handleContentClick","e","target","innerHTML","handleSnackbarClose","snackbar","handleCopy","handleSeeMore","handleSeeLess","tagsToShow","pageSize","_this2","keys","_this3","_this$state","tagsObject","labelIconStyle","fontSize","id","style","textAlign","textTransform","slice","react_clipboard_default","data-clipboard-text","charAt","toUpperCase","onClick","substring","LabelSharp_default","console","log","container_Snackbar","Upload","handleTagChange","value","handleTitleChange","handleContentChange","handlePoetChange","upload","uploading","newTagInputValue","toConsumableArray","set","update","FieldValue","increment","timestamp","serverTimestamp","newTagInput","alert","catch","err","showNewTagInput","handleNewTag","authMe","password","authenticated","FormControl","InputLabel","htmlFor","Select","multiple","onChange","input","Input","renderValue","selected","join","MenuItem","Checkbox","checked","indexOf","ListItemText","primary","TextField","label","placeholder","margin","multiline","type","disabled","Search","handleInputFocus","searching","handleInputChange","searchingWord","searchingList","filter","toLowerCase","window","addEventListener","position","border","left","width","height","right","paddingLeft","transition","boxShadow","maxLength","withRouter","MenuContainer","toggleDrawer","Menu_default","Drawer","anchor","role","onKeyDown","List","ListItem","button","ListItemIcon","icons_Home_default","EditFinal","handleDelete","relatedTags","where","ref","delete","closeEditing","Edit","fetchPosts","idArray","tempTagsObject","editing","components_EditFinal","App","loading","tagsArray","tempShayariObject","error","container_Menu","components_Search","react_router","exact","path","render","components_Home","components_TagPage","match","params","components_Upload","components_Edit","component","Boolean","location","hostname","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0c065fdc.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport '../styles/Home.css';\nimport { Link } from 'react-router-dom'\n\nclass Home extends Component {\n\n    render() {\n        const { tags, shayariObject } = this.props;\n        return (\n            <React.Fragment>\n                {\n                    tags.map(tag => (\n                    <div className='tagCards' \n                    key={tag}>\n                    <Link to={`/tags/${tag}`}>{tag}</Link><span> {shayariObject[tag].totalShayaris}</span>\n                    </div>\n                    ))\n                }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Home","import React, { Component } from 'react'\n\nexport default class Error404 extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Error404</h1>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\n\nfunction SnackbarContainer(props) {\n    const { open, message, handleClose } = props;\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{vertical: 'bottom', horizontal: 'left'}}\n                open={open}\n                onClose={handleClose}\n                message={message}\n                autoHideDuration={2000}\n            />\n        </div>\n    )\n}\n\nexport default SnackbarContainer","import React, { Component } from 'react';\nimport firebase from 'firebase';\nimport { Link } from 'react-router-dom';\nimport '../styles/TagPage.css';\nimport SnackbarContainer from '../container/Snackbar';\nimport Clipboard from 'react-clipboard.js';\nimport LabelSharpIcon from '@material-ui/icons/LabelSharp'\n\nclass TagPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            shayariObject: Object.assign({}, props.shayariObject),\n            snackbar: false,\n            pageSize: 5,\n            tagsToShow: 2\n        }\n    }\n\n    componentWillReceiveProps() {\n        var tagsToShowObject = this.props.shayariObject[this.props.tag].tagsToShowObject;\n        Object.keys(tagsToShowObject).forEach(key => tagsToShowObject[key] = this.state.tagsToShow)\n        this.setState(prev => ({\n            pageSize: 5,\n        }))\n    }\n\n    fetchContent = () => {\n        var titleArray = [];\n        var contentArray = [];\n        var poetArray = [];\n        var tempRelatedTagsObject = {};\n        var tempTagsToShowObject = {};\n        var relatedTagsArray = [];\n        if(!this.state.shayariObject[this.props.tag].titleArray.length){\n            var first = firebase.firestore().collection('tags').doc(this.props.tag).collection('shayaris').orderBy('timestamp', 'desc');\n            first.get()\n            .then(snap => {\n                var i = 0;\n                snap.forEach(doc => {\n                    var title = doc.data().title;\n                    var content = doc.data().content;\n                    var poet = doc.data().poet;\n                    relatedTagsArray = doc.data().tags;\n                    titleArray.push(title);\n                    contentArray.push(content);\n                    poetArray.push(poet);\n                    Object.assign(tempTagsToShowObject, {\n                        [i]: this.state.tags\n                    })\n                    Object.assign(tempRelatedTagsObject, {\n                        [i]: relatedTagsArray\n                    })\n                    i++;\n                })\n                this.setState(prev => ({\n                    shayariObject: Object.assign({}, prev.shayariObject, {\n                            [this.props.tag]: {\n                                ...prev.shayariObject[this.props.tag],\n                                titleArray: titleArray,\n                                contentArray: contentArray,\n                                poetArray: poetArray,\n                                relatedTagsObject: tempRelatedTagsObject,\n                                tagsToShowObject: tempTagsToShowObject\n                                }\n                            })\n                }), () => {\n                    this.props.putIntoShayariObject(this.state.shayariObject)\n                })\n            })\n        }\n    }\n\n    handleContentClick = (e, content) => {\n        e.target.innerHTML = content;\n    }\n\n    handleSnackbarClose = () => {\n        this.setState({\n            snackbar: false\n        })\n    }\n\n    handleCopy = () => {\n        this.setState({\n            snackbar: true\n        })\n    }\n\n    handleSeeMore = (tag, i, length) => {\n        this.setState(prev => ({\n            shayariObject: Object.assign({}, prev.shayariObject, {\n                [tag]: {\n                    ...prev.shayariObject[tag],\n                    tagsToShowObject: {\n                        ...prev.shayariObject[tag].tagsToShowObject,\n                        [i]: length\n                    }\n                }\n            })\n        }))\n    }\n\n    handleSeeLess = (tag, i) => {\n        this.setState(prev => ({\n            shayariObject: Object.assign({}, prev.shayariObject, {\n                [tag]: {\n                    ...prev.shayariObject[tag],\n                    tagsToShowObject: {\n                        ...prev.shayariObject[tag].tagsToShowObject,\n                        [i]: this.state.tagsToShow\n                    }\n                }\n            })\n        }))\n    }\n\n    render() {\n\n        const { tag } = this.props;\n        const { shayariObject, pageSize } = this.state;\n        var titleArray = shayariObject[tag].titleArray;\n        var contentArray = shayariObject[tag].contentArray;\n        var poetArray = shayariObject[tag].poetArray;\n        var tagsObject = shayariObject[tag].relatedTagsObject;\n        var tagsToShowObject = shayariObject[tag].tagsToShowObject;\n        const labelIconStyle = {\n            fontSize: '22px'\n        }\n        return (\n            <div id='tagPage'>\n                <h2 style={{textAlign: 'center', textTransform: 'capitalize'}}>{tag}</h2>\n                <hr/>\n                {\n                    shayariObject[tag].titleArray.length ?\n                    titleArray.slice(0,pageSize).map((title, i) => (\n                        <React.Fragment key={i}>\n                        <div className={`shayariCard div${i}`}>\n                            <div className={`shayariCardHeader div${i}`}>\n                                <Clipboard \n                                className='copyBtn'\n                                data-clipboard-text={\n                                    titleArray[i].charAt(0).toUpperCase() + titleArray[i].slice(1) + '\\n' \n                                    + contentArray[i].charAt(0).toUpperCase() + contentArray[i].slice(1) \n                                    + '\\nbestshayaris.com'}\n                                onClick={this.handleCopy}>\n                                copy\n                                </Clipboard>\n                            </div>\n                            <div className={`div${i} shayariCardTitle`}>\n                                {title.charAt(0).toUpperCase() + title.slice(1)}\n                            </div>\n                            <br/>\n                            <div className={`div${i} shayariCardContent`} onClick={e => this.handleContentClick(e, contentArray[i])}>\n                                {contentArray[i].length > 200 ? contentArray[i].substring(0,200) + '....' : contentArray[i]}\n                            </div>\n                            <div className='shayariCardPoet'>\n                                <span>{poetArray[i]}</span>\n                            </div>\n                            <div className='shayariCardLinks'>\n                                <LabelSharpIcon style={labelIconStyle} />\n                                {tagsObject[i].slice(0, tagsToShowObject[i]).map((tag, i) => (\n                                    <React.Fragment key={tag}>\n                                        <Link to={`./${tag}`} className='relatedLinks'>{i === 0 ? null : ','}{tag}</Link>\n                                    </React.Fragment>\n                                ))}\n                                {\n                                    tagsToShowObject[i] < tagsObject[i].length\n                                    ? <span onClick={() => this.handleSeeMore(tag, i, tagsObject[i].length)} className='seeMore'>see more</span>\n                                    : <span onClick={() => this.handleSeeLess(tag, i)} className='seeLess'>see less</span>\n                                }\n                                \n                            </div>\n                            <br/>\n                        </div>\n                        <hr/>\n                        </React.Fragment>\n                    ))\n                    :\n                    this.fetchContent()\n                }\n                {\n                    shayariObject[tag].totalShayaris > pageSize\n                    ?\n                    <div \n                    className='seeMoreDiv' \n                    onClick={() => this.setState(prev => ({pageSize: prev.pageSize + 5}))}\n                    >\n                    {console.log(pageSize, titleArray.length)}\n                    <span className='seeMoreSpan'>See more</span>\n                    </div>\n                    : null\n                }\n                <SnackbarContainer open={this.state.snackbar} message='copied.' handleClose={this.handleSnackbarClose} />\n            </div>\n        )\n    }\n}\n\nexport default TagPage","import React, { Component } from 'react'\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport firebase from 'firebase'\nimport '../styles/Upload.css'\n\nclass Upload extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            authenticated: false,\n            password: '',\n            title: '',\n            content: '',\n            poet: '',\n            tags: [],\n            newTagInput: false,\n            newTagInputValue: '',\n            uploading: false\n        }\n    }\n\n    componentDidMount(){\n        firebase.firestore().collection('users').doc('auth').get()\n        .then(doc => {\n            this.setState({\n                password: doc.data().password\n            })\n        })\n    }\n\n    handleTagChange = (e) => {\n        this.setState(prev => ({\n            tags: e.target.value\n        }))\n    }\n\n    handleTitleChange = (e) => {\n        this.setState({\n            title: e.target.value\n        })\n    }\n\n    handleContentChange = (e) => {\n        this.setState({\n            content: e.target.value\n        })\n    }\n\n    handlePoetChange = (e) => {\n        this.setState({\n            poet: e.target.value\n        })\n    }\n\n    upload = () => {\n        var tags = this.state.tags;\n        var title = this.state.title;\n        var content = this.state.content;\n        var poet = this.state.poet;\n        if(tags){\n            if(title){\n                if(content){\n                    this.setState({\n                        uploading: true\n                    })\n                    if(this.state.newTagInputValue !== ''){                 //there is a new tag\n                        this.setState(prev => ({\n                            tags: [...prev.tags, this.state.newTagInputValue]\n                        }))\n                        firebase.firestore().collection('tags').doc(this.state.newTagInputValue).set({\n                            totalShayaris: 0\n                        })\n                        .then(() => {\n                            //upload\n                            this.state.tags.forEach((tag, i) => {\n                                firebase.firestore().collection('tags').doc(tag).update({\n                                    totalShayaris: firebase.firestore.FieldValue.increment(1)\n                                })\n                                .then(() => {\n                                    firebase.firestore().collection('tags').doc(tag).collection('shayaris').doc().set({\n                                        title: title,\n                                        content: content,\n                                        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                                        tags: this.state.tags,\n                                        poet: poet\n                                    })\n                                    .then(() => {\n                                        if(i === this.state.tags.length-1){\n                                            this.setState({\n                                                title: '',\n                                                content: '',\n                                                poet: '',\n                                                tags: [],\n                                                newTagInput: false,\n                                                newTagInputValue: '',\n                                                uploading: false\n                                            })\n                                            alert('uploaded');\n                                        }\n                                    })\n                                })\n                                .catch(err => {\n                                    alert('cannot upload due to some error.')\n                                })\n                            })\n                        })\n                    } else {                    //there is no new tag\n                        this.state.tags.forEach((tag, i) => {\n                            firebase.firestore().collection('tags').doc(tag).update({\n                                totalShayaris: firebase.firestore.FieldValue.increment(1)\n                            })\n                            .then(() => {\n                                firebase.firestore().collection('tags').doc(tag).collection('shayaris').doc().set({\n                                    title: title,\n                                    content: content,\n                                    poet: poet,\n                                    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                                    tags: this.state.tags,\n                                })\n                                .then(() => {\n                                    if(i === this.state.tags.length-1){\n                                        this.setState({\n                                            title: '',\n                                            content: '',\n                                            poet: '',\n                                            tags: [],\n                                            newTagInput: false,\n                                            newTagInputValue: '',\n                                            uploading: false\n                                        })\n                                        alert('uploaded');\n                                    }\n                                })\n                            })\n                            .catch(err => {\n                                alert('cannot upload due to some error.')\n                            })\n                        })   \n                    }\n                }else {\n                    alert('error')\n                }\n            } else {\n                alert('error')\n            }\n        }else {\n            alert('error')\n        }\n    }\n\n    showNewTagInput = () => {\n        this.setState({\n            newTagInput: !this.state.newTagInput\n        })\n    }\n\n    handleNewTag = (e) => {\n        this.setState({\n            newTagInputValue: e.target.value\n        })\n    }\n\n    authMe = (e) => {\n        if(this.state.password !== ''){\n            if(this.state.password === e.target.value) {\n                this.setState({\n                    authenticated: true\n                })\n            }\n        }\n    }\n\n    render() {\n        return (\n            !this.state.authenticated \n            ? <input placeholder='password' onChange={(e) => this.authMe(e)}></input>\n            :\n            <div style={{textAlign: 'center'}}>\n                <FormControl>\n                    <InputLabel htmlFor=\"select-multiple-chip\">Tag</InputLabel>\n                    <Select\n                      multiple\n                      value={this.state.tags}\n                      onChange={e => this.handleTagChange(e)}\n                      input={<Input id=\"select-multiple-checkbox\" />}\n                      renderValue={selected => selected.join(', ')}\n                    >\n                        {this.props.tags.map(tag => (\n                          <MenuItem key={tag} value={tag}>\n                          <Checkbox checked={this.state.tags.indexOf(tag) > -1} />\n                          <ListItemText primary={tag} />\n                          </MenuItem>\n                        ))}\n                    </Select>\n                    <button className='newTagBtn' onClick={this.showNewTagInput}>New Tag</button>\n\n                    {\n                        this.state.newTagInput ?\n                        <TextField\n                            label=\"New Tag\"\n                            placeholder=\"type your tag\"\n                            value={this.state.newTagInputValue}\n                            onChange={this.handleNewTag}\n                          /> :\n                          null\n                    }\n                  <TextField\n                      label=\"Title\"\n                      placeholder=\"Choose title wisely\"\n                      margin=\"normal\"\n                      value={this.state.title}\n                      onChange={e => this.handleTitleChange(e)}\n                    />\n                  <TextField\n                      label=\"Content\"\n                      placeholder=\"Write beyond imagination\"\n                      multiline\n                      margin=\"normal\"\n                      value={this.state.content}\n                      onChange={e => this.handleContentChange(e)}\n                    />\n                  <TextField\n                      label=\"Poet\"\n                      placeholder=\"Poet\"\n                      margin=\"normal\"\n                      value={this.state.poet}\n                      onChange={e => this.handlePoetChange(e)}\n                    />\n                    <button type='submit' onClick={this.upload} className='uploadBtn' disabled={this.state.uploading}>Upload</button>\n                </FormControl>\n            </div>\n        )\n    }\n}\n\nexport default Upload","import React, { Component } from 'react';\nimport '../styles/Search.css';\nimport { Link, withRouter } from 'react-router-dom';\n\nclass Search extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            searching: false,\n            searchingWord: '',\n            searchingList: props.tags\n        }\n    }\n    \n      handleInputFocus = (e) => {\n        this.setState({\n          searching: true\n        })\n      }\n    \n      handleInputChange = (e) => {\n        this.setState({\n            searchingWord: e.target.value,\n            searchingList: this.props.tags.filter(tag => {\n                return tag.indexOf(e.target.value.toLowerCase()) !== -1\n            })\n        })\n      }\n\n    render() {\n      const focusStyle = {\n        position: 'absolute',\n        border: 'none',\n        left: '0',\n        width: '100%',\n        margin: '0',\n        height: '35px',\n\n      }\n      const style = {\n        position: 'absolute',\n        width: '20%',\n        right: '0',\n        margin: '6px',\n        height: '25px',\n        fontSize: '16px',\n        border: '1px solid black',\n        paddingLeft: '5px',\n        transition: '.4s',\n        boxShadow: '1px 1px 3px'\n      }\n        return (\n            <React.Fragment>\n                  {\n                    this.state.searching\n                    ? window.addEventListener('popstate', () => this.setState({searching: false, searchingWord: ''}))\n                    : null\n                  }\n                  <input\n                  style={this.state.searching ? focusStyle : style}\n                  placeholder='search...'\n                  maxLength='20'\n                  onClick={(e) => this.setState({searching: true, searchingWord: e.target.value})}\n                  value={this.state.searchingWord} \n                  onChange={e => this.handleInputChange(e)}/>\n                {\n                    !this.state.searching ? null :\n                    <div id='searchingListParent'>\n                      <ul className='searchingList' onClick={() => this.setState({searching: false, searchingWord: '', searchingList: this.props.tags})}>\n                        {\n                          this.state.searchingList.map((tag, i) => (\n                            <Link key={tag} to={`/tags/${tag}`} className='searchingListItemLink'>\n                                <li className='searchingListItem'>{tag}</li>\n                            </Link>\n                          ))\n                        }\n                      </ul>\n                    </div> \n                }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withRouter(Search)","import React, { Component } from 'react';\nimport Menu from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { Link } from 'react-router-dom';\n\nclass MenuContainer extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            open: false\n        }\n    }\n\n    toggleDrawer = () => {\n      this.setState({\n        open: !this.state.open\n      })\n    }\n\n    render() {\n        const list = () => (\n            <div\n              role=\"presentation\"\n              onClick={() => this.toggleDrawer()}\n              onKeyDown={() => this.toggleDrawer()}\n            >\n              <List>\n                  <ListItem button>\n                    <ListItemIcon><HomeIcon/></ListItemIcon>\n                    <ListItemText><Link to='/' className='drawerTextLink'>Home</Link></ListItemText>\n                  </ListItem>\n              </List>\n            </div>\n          );\n          \n        return (\n            <React.Fragment>\n\n                <Menu fontSize='large' onClick={this.toggleDrawer} />\n\n                <Drawer anchor='left' open={this.state.open} onClose={this.toggleDrawer}>\n                  {list()}\n                </Drawer>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default MenuContainer;","import React, { Component } from 'react'\nimport firebase from 'firebase'\n\nclass EditFinal extends Component {\n\n    handleDelete = e => {\n        this.props.relatedTags.forEach((tag, i) => {\n            var ref = firebase.firestore().collection('tags').doc(tag).collection('shayaris').where('content', '==' , this.props.content);\n            ref.get()\n            .then(snap => {\n                snap.forEach(doc => {\n                    doc.ref.delete()\n                    .then(() => {\n                        firebase.firestore().collection('tags').doc(tag).update({\n                            totalShayaris: firebase.firestore.FieldValue.increment(-1)\n                        })\n                        .then(() => {\n                            if(i === this.props.relatedTags.length-1){\n                                this.props.closeEditing()\n                            }\n                        })\n                    })\n                    .catch(err => {\n                        alert(err.message)\n                    })\n                })\n            })\n        })\n    }\n\n    render() {\n        const { title, content, relatedTags } = this.props;\n        return (\n            <div>\n                <div id='editTitle'>{title}</div>\n                <div id='editContent'>{content}</div>\n                <div>{relatedTags.join(', ')}</div>\n                <button onClick={e => this.handleDelete(e)}>Delete</button>\n            </div>\n        )\n\n    }\n}\n\nexport default EditFinal","import React, { Component } from 'react'\nimport firebase from 'firebase'\nimport EditFinal from './EditFinal';\nimport SnackbarContainer from '../container/Snackbar';\n\nclass Edit extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            tag: '',\n            title: [],\n            content: [],\n            id: [],\n            authenticated: false,\n            password: '',\n            relatedTags: {},\n            editing: false,\n            i: -1,\n            open: false,\n            message: ''\n        }\n    }\n\n    componentDidMount(){\n        firebase.firestore().collection('users').doc('auth').get()\n        .then(doc => {\n            this.setState({\n                password: doc.data().password\n            })\n        })\n    }\n    \n    handleTagChange = (e) => {\n        this.setState({\n            tag: e.target.value\n        })\n    }\n\n    fetchPosts = () => {\n        var titleArray = [];\n        var contentArray = [];\n        var idArray = [];\n        var tempTagsObject = {};\n        firebase.firestore().collection('tags').doc(this.state.tag).collection('shayaris').get()\n        .then(snap => {\n            var i = 0;\n            snap.forEach(doc => {\n                titleArray.push(doc.data().title)\n                contentArray.push(doc.data().content)\n                idArray.push(doc.id)\n                Object.assign(tempTagsObject, {\n                    [i]: doc.data().tags\n                })\n                i++;\n            })\n            this.setState(prev => ({\n                title: titleArray,\n                content: contentArray,\n                id: idArray,\n                relatedTags: tempTagsObject\n            }))\n        })\n    }\n\n    authMe = (e) => {\n        if(this.state.password !== ''){\n            if(this.state.password === e.target.value) {\n                this.setState({\n                    authenticated: true\n                })\n            }\n        }\n    }\n\n    closeEditing = () => {\n        this.setState({\n            editing: false,\n            open: true,\n            message: 'successfully deleted',\n            title: [],\n            content: [],\n            id: [],\n            relatedTags: {}\n        })\n    }\n\n    handleSnackbarClose = () => {\n        this.setState({\n            open: false,\n            message: ''\n        })\n    }\n\n    render() {\n        const { i, title, content, relatedTags, id, tag} = this.state;\n        return (\n            !this.state.authenticated \n            ? <input placeholder='password' onChange={(e) => this.authMe(e)}></input>\n            :\n            this.state.editing\n            ? <EditFinal tag={tag} relatedTags={relatedTags[i]} title={title[i]} content={content[i]} id={id[i]} closeEditing={this.closeEditing} />\n            : <div>\n            <select value={tag} onChange={e => this.handleTagChange(e)}>\n                {\n                    <option value=''>--select a tag--</option>\n                }\n                {\n                    this.props.tags.map((tag, i) => (\n                        <option key={i} value={tag}>{tag}</option>\n                    ))\n                }\n            </select>\n            <button onClick={this.fetchPosts} disabled={!tag}>Fetch posts</button>\n\n            {\n                title.map((title, i) => {\n                    return (\n                        <React.Fragment key={title}>\n                        <div className={`div${i}`} onClick={(e) => this.setState({editing: true, i: i})}>\n                            <div className={`div${i}`}>{title}</div>\n                            <br/>\n                            <div className={`div${i}`}>{content[i]}</div>\n                            <div>{relatedTags[i].join(', ')}</div>\n                        </div>\n                        <hr/>\n                        </React.Fragment>\n                    )\n                })\n            }\n            <SnackbarContainer open={this.state.open} message={this.state.message} handleClose={this.handleSnackbarClose} />\n        </div>\n        )\n    }\n}\n\nexport default Edit","import React, { Component } from 'react';\nimport './App.css'\nimport { HashRouter, Switch, Route, Link } from 'react-router-dom'\nimport Home from './components/Home';\nimport Error404 from './components/Error404';\nimport firebase from 'firebase'\nimport TagPage from './components/TagPage';\nimport Upload from './components/Upload';\nimport Search from './components/Search';\nimport MenuContainer from './container/Menu';\nimport Edit from './components/Edit';\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n        tags: [],\n        loading: true,\n        shayariObject: {}\n    }\n  }\n\n  componentDidMount() {\n    var tagsArray = [];\n    var tempShayariObject = {};\n    var totalShayaris = 0;\n    firebase.firestore().collection('tags').get()\n    .then(snap => {\n      snap.forEach(doc => {\n        var tag =  doc.id;\n        totalShayaris = doc.data().totalShayaris;\n        tagsArray.push(tag)\n        tempShayariObject[tag] = {\n          titleArray: [],\n          totalShayaris: totalShayaris\n        }\n      })\n      tagsArray.forEach(tag => {\n        tempShayariObject[tag].relatedTagsObject = {};\n        for(let i=0; i<totalShayaris; i++){\n          tempShayariObject[tag].relatedTagsObject[i] = [];\n        }\n      })\n      this.setState(prev => ({\n        tags: tagsArray,\n        loading: false,\n        shayariObject: Object.assign({}, prev.shayariObject, tempShayariObject)\n      }))\n    })\n    .catch(error => {\n      alert(error.message)\n    })\n  }\n\n  putIntoShayariObject = (shayariObject) => {\n    this.setState(prev => ({\n      shayariObject: Object.assign(prev.shayariObject, shayariObject)\n    }))\n  }\n\n  render() {\n    const { tags, shayariObject } = this.state;\n\n    return (\n      this.state.loading ? <h1>loading</h1> :\n      <div className=\"App\">\n      <HashRouter>\n      <div \n      className='header'>\n        <MenuContainer />\n        <span className='headerName'><Link to='/' className='link'>𝓫𝓮𝓼𝓽𝓼𝓱𝓪𝔂𝓪𝓻𝓲𝓼.𝓬𝓸𝓶</Link><span></span></span>\n        <Search tags={tags} />\n      </div>\n\n      <Switch>\n        <Route exact path='/' render={props => <Home tags={tags} shayariObject={shayariObject} />} />\n\n        <Route path='/tags/:tag' render={props => \n        <TagPage \n        tag={props.match.params.tag}\n        shayariObject={shayariObject}\n        putIntoShayariObject={this.putIntoShayariObject} />} />\n\n        <Route exact path='/upload' render={props => <Upload tags={tags} />} />\n        <Route exact path='/edit' render={props => <Edit tags={tags} />} />\n\n        <Route path='*' component={Error404} />\n      </Switch>\n      </HashRouter>\n    </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from 'firebase'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCEMfOB5_j1hIdpxVXOduBuUMTwj5txVZo\",\n    authDomain: \"bestshayari-7f672.firebaseapp.com\",\n    databaseURL: \"https://bestshayari-7f672.firebaseio.com\",\n    projectId: \"bestshayari-7f672\",\n    storageBucket: \"bestshayari-7f672.appspot.com\",\n    messagingSenderId: \"1001640034721\",\n    appId: \"1:1001640034721:web:251a9065628579fe518be0\",\n    measurementId: \"G-EQP9800NT3\"\n};\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}