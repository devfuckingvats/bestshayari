{"version":3,"sources":["components/Home.js","components/Error404.js","components/TagPage.js","container/Upload.js","App.js","serviceWorker.js","index.js"],"names":["Home","tags","this","props","react_default","a","createElement","Fragment","map","tag","className","key","react_router_dom","to","concat","Component","Error404","TagPage","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","shayariObject","assign","_this2","titleArray","contentArray","length","firebase","firestore","collection","doc","get","then","snap","forEach","title","data","content","push","setState","defineProperty","putIntoShayariObject","Upload","handleTagChange","e","prev","target","value","handleTitleChange","handleContentChange","upload","alert","set","FormControl","InputLabel","htmlFor","Select","multiple","onChange","input","Input","id","renderValue","selected","join","MenuItem","Checkbox","checked","indexOf","ListItemText","primary","TextField","label","placeholder","margin","multiline","type","onClick","App","console","log","toggleDrawer","drawer","loading","tagsArray","tempShayariObject","catch","error","_this3","Menu_default","fontSize","react_router","exact","path","render","components_Home","components_TagPage","match","params","container_Upload","component","Drawer","anchor","open","onClose","role","onKeyDown","List","ListItem","button","ListItemIcon","icons_Home_default","Boolean","window","location","hostname","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.54d8d86d.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport '../styles/Home.css';\nimport { Link } from 'react-router-dom'\n\nclass Home extends Component {\n\n    render() {\n        const { tags } = this.props;\n        return (\n            <React.Fragment>\n                {\n                    tags.map(tag => (\n                    <div className='tagCards' \n                    key={tag}>\n                    <Link to={`/tags/${tag}`}>{tag}</Link>\n                    </div>\n                    ))\n                }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Home","import React, { Component } from 'react'\n\nexport default class Error404 extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Error404</h1>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport firebase from 'firebase';\n\nclass TagPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            shayariObject: Object.assign({}, props.shayariObject)\n        }\n    }\n\n    componentDidMount() {\n        var titleArray = [];\n        var contentArray = [];\n        if(!this.state.shayariObject[this.props.tag].titleArray.length){\n            firebase.firestore().collection('tags').doc(this.props.tag).collection('shayaris').get()\n            .then(snap => {\n                snap.forEach(doc => {\n                    var title = doc.data().title;\n                    var content = doc.data().content;\n                    titleArray.push(title);\n                    contentArray.push(content);\n                })\n                this.setState({\n                    shayariObject: {\n                        [this.props.tag]: {\n                            titleArray: titleArray,\n                            contentArray: contentArray\n                        }\n                    }\n                }, () => {\n                    this.props.putIntoShayariObject(this.state.shayariObject)\n                })\n            })\n        }\n    }\n\n    render() {\n        const { tag } = this.props;\n        return (\n            <div>\n                <h2>{tag}</h2>\n                {this.state.shayariObject[tag].titleArray}\n                <hr/>\n            </div>\n        )\n    }\n}\n\nexport default TagPage","import React, { Component } from 'react'\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport firebase from 'firebase'\n\nclass Upload extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            title: '',\n            content: '',\n            tags: []\n        }\n    }\n\n    handleTagChange = (e) => {\n        this.setState(prev => ({\n            tags: e.target.value\n        }))\n    }\n\n    handleTitleChange = (e) => {\n        this.setState({\n            title: e.target.value\n        })\n    }\n\n    handleContentChange = (e) => {\n        this.setState({\n            content: e.target.value\n        })\n    }\n\n    upload = () => {\n        var tags = this.state.tags;\n        var title = this.state.title;\n        var content = this.state.content;\n        if(!tags){\n            if(!title){\n                if(!content){\n                    //upload\n                    this.state.tags.forEach(tag => {\n                        firebase.firestore().collection('tags').doc(tag).collection('shayaris').doc().set({\n                            title: title,\n                            content: content\n                        })\n                    })\n                }else {\n                    alert('error')\n                }\n            } else {\n                alert('error')\n            }\n        }else {\n            alert('error')\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <FormControl>\n                  <InputLabel htmlFor=\"select-multiple-chip\">Tag</InputLabel>\n                  <Select\n                    multiple\n                    value={this.state.tags}\n                    onChange={e => this.handleTagChange(e)}\n                    input={<Input id=\"select-multiple-checkbox\" />}\n                    renderValue={selected => selected.join(', ')}\n                  >\n                    {this.props.tags.map(tag => (\n                      <MenuItem key={tag} value={tag}>\n                      <Checkbox checked={this.state.tags.indexOf(tag) > -1} />\n                      <ListItemText primary={tag} />\n                      </MenuItem>\n                    ))}\n                  </Select>\n\n                  <TextField\n                      id=\"standard-textarea\"\n                      label=\"Title\"\n                      placeholder=\"Choose title wisely\"\n                      margin=\"normal\"\n                      value={this.state.title}\n                      onChange={e => this.handleTitleChange(e)}\n                    />\n                  <TextField\n                      id=\"standard-textarea\"\n                      label=\"Content\"\n                      placeholder=\"Write beyond imagination\"\n                      multiline\n                      margin=\"normal\"\n                      value={this.state.content}\n                      onChange={e => this.handleContentChange(e)}\n                    />\n                    <button type='submit' onClick={this.upload}>Upload</button>\n                </FormControl>\n            </div>\n        )\n    }\n}\n\nexport default Upload","import React, { Component } from 'react';\nimport './App.css'\nimport { HashRouter, Switch, Route, Link } from 'react-router-dom'\nimport Home from './components/Home';\nimport Error404 from './components/Error404';\nimport Menu from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport firebase from 'firebase'\nimport TagPage from './components/TagPage';\nimport Upload from './container/Upload';\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n        tags: [],\n        drawer: false,\n        loading: true,\n        shayariObject: {}\n    }\n  }\n\n  componentDidMount() {\n    var tagsArray = [];\n    var tempShayariObject = {};\n    firebase.firestore().collection('tags').get()\n    .then(snap => {\n      snap.forEach(doc => {\n        var tag =  doc.id;\n        tagsArray.push(tag)\n        tempShayariObject[tag] = {\n          titleArray: [],\n          contentArray: []\n        }\n      })\n      this.setState(prev => ({\n        tags: tagsArray,\n        loading: false,\n        shayariObject: Object.assign({}, prev.shayariObject, tempShayariObject)\n      }))\n    })\n    .catch(error => {\n      alert(error)\n    })\n  }\n\n  putIntoShayariObject = (shayariObject) => {\n    console.log(shayariObject);\n    console.log(this.state.shayariObject)\n    this.setState(prev => ({\n      shayariObject: Object.assign(prev.shayariObject, shayariObject)\n    }))\n  }\n\n  toggleDrawer = () => {\n    this.setState({\n      drawer: !this.state.drawer\n    })\n  }\n\n  render() {\n    const list = () => (\n      <div\n        role=\"presentation\"\n        onClick={() => this.toggleDrawer()}\n        onKeyDown={() => this.toggleDrawer()}\n      >\n        <List>\n            <ListItem button>\n              <ListItemIcon><HomeIcon/> </ListItemIcon>\n              <ListItemText><Link to='/' className='drawerTextLink'>Home</Link></ListItemText>\n            </ListItem>\n        </List>\n      </div>\n    );\n\n    return (\n      this.state.loading ? <h1>loading</h1> :\n      <div className=\"App\">\n      <HashRouter>\n      \n      <div className='header'><Menu fontSize='large' onClick={this.toggleDrawer} /></div>\n\n        <Switch>\n          <Route exact path='/' render={props => <Home tags={this.state.tags} />} />\n\n          <Route path='/tags/:tag' render={props => \n          <TagPage \n          tag={props.match.params.tag}\n          shayariObject={this.state.shayariObject}\n          putIntoShayariObject={this.putIntoShayariObject} />} />\n\n          <Route exact path='/upload' render={props => <Upload tags={this.state.tags} />} />\n\n          <Route path='*' component={Error404} />\n        </Switch>\n\n        <Drawer anchor='top' open={this.state.drawer} onClose={this.toggleDrawer}>\n            {list()}\n          </Drawer>\n      </HashRouter>\n    </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from 'firebase'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCEMfOB5_j1hIdpxVXOduBuUMTwj5txVZo\",\n    authDomain: \"bestshayari-7f672.firebaseapp.com\",\n    databaseURL: \"https://bestshayari-7f672.firebaseio.com\",\n    projectId: \"bestshayari-7f672\",\n    storageBucket: \"bestshayari-7f672.appspot.com\",\n    messagingSenderId: \"1001640034721\",\n    appId: \"1:1001640034721:web:251a9065628579fe518be0\",\n    measurementId: \"G-EQP9800NT3\"\n};\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}