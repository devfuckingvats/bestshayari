{"version":3,"sources":["components/Home.js","components/Error404.js","container/Snackbar.js","components/TagPage.js","components/Upload.js","components/Search.js","container/Menu.js","components/Edit.js","App.js","serviceWorker.js","index.js"],"names":["Home","tags","this","props","react_default","a","createElement","Fragment","map","tag","className","key","react_router_dom","to","concat","Component","Error404","SnackbarContainer","open","message","handleClose","Snackbar","anchorOrigin","vertical","horizontal","onClose","autoHideDuration","TagPage","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","fetchContent","titleArray","contentArray","poetArray","tempRelatedTagsObject","relatedTagsArray","state","shayariObject","length","firebase","firestore","collection","doc","orderBy","get","then","snap","i","forEach","title","data","content","poet","push","assign","defineProperty","setState","prev","objectSpread","relatedTagsObject","putIntoShayariObject","handleContentClick","e","target","innerHTML","handleSnackbarClose","snackbar","handleCopy","_this2","tagsObject","labelIconStyle","fontSize","id","style","textAlign","textTransform","react_clipboard_default","data-clipboard-text","charAt","toUpperCase","slice","onClick","substring","LabelSharp_default","container_Snackbar","Upload","handleTagChange","value","handleTitleChange","handleContentChange","handlePoetChange","upload","uploading","newTagInputValue","toConsumableArray","set","totalShayaris","update","FieldValue","increment","timestamp","serverTimestamp","newTagInput","alert","catch","err","showNewTagInput","handleNewTag","authMe","password","authenticated","_this3","FormControl","InputLabel","htmlFor","Select","multiple","onChange","input","Input","renderValue","selected","join","MenuItem","Checkbox","checked","indexOf","ListItemText","primary","TextField","label","placeholder","margin","multiline","type","disabled","Search","handleInputFocus","searching","handleInputChange","searchingWord","searchingList","filter","toLowerCase","window","addEventListener","position","border","left","width","height","right","paddingLeft","transition","boxShadow","maxLength","MenuContainer","toggleDrawer","Menu_default","Drawer","anchor","role","onKeyDown","List","ListItem","button","ListItemIcon","icons_Home_default","Edit","fetchPosts","handleEdit","editing","document","getElementsByClassName","contentEditable","handleSave","console","log","editingTitle","editingContent","App","loading","tagsArray","tempShayariObject","error","container_Menu","components_Search","react_router","exact","path","render","components_Home","components_TagPage","match","params","components_Upload","components_Edit","component","Boolean","location","hostname","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3e77e821.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport '../styles/Home.css';\nimport { Link } from 'react-router-dom'\n\nclass Home extends Component {\n\n    render() {\n        const { tags } = this.props;\n        return (\n            <React.Fragment>\n                {\n                    tags.map(tag => (\n                    <div className='tagCards' \n                    key={tag}>\n                    <Link to={`/tags/${tag}`}>{tag}</Link>\n                    </div>\n                    ))\n                }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Home","import React, { Component } from 'react'\n\nexport default class Error404 extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Error404</h1>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\n\nfunction SnackbarContainer(props) {\n    const { open, message, handleClose } = props;\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{vertical: 'bottom', horizontal: 'left'}}\n                open={open}\n                onClose={handleClose}\n                message={message}\n                autoHideDuration={2000}\n            />\n        </div>\n    )\n}\n\nexport default SnackbarContainer","import React, { Component } from 'react';\nimport firebase from 'firebase';\nimport { Link } from 'react-router-dom';\nimport '../styles/TagPage.css';\nimport SnackbarContainer from '../container/Snackbar';\nimport Clipboard from 'react-clipboard.js';\nimport LabelSharpIcon from '@material-ui/icons/LabelSharp'\n\nclass TagPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            shayariObject: Object.assign({}, props.shayariObject),\n            snackbar: false\n        }\n    }\n\n    fetchContent = () => {\n        var titleArray = [];\n        var contentArray = [];\n        var poetArray = [];\n        var tempRelatedTagsObject = {};\n        var relatedTagsArray = [];\n        if(!this.state.shayariObject[this.props.tag].titleArray.length){\n            firebase.firestore().collection('tags').doc(this.props.tag).collection('shayaris').orderBy('timestamp', 'desc').get()\n            .then(snap => {\n                var i = 0;\n                snap.forEach(doc => {\n                    var title = doc.data().title;\n                    var content = doc.data().content;\n                    var poet = doc.data().poet;\n                    relatedTagsArray = doc.data().tags;\n                    titleArray.push(title);\n                    contentArray.push(content);\n                    poetArray.push(poet);\n                    Object.assign(tempRelatedTagsObject, {\n                        [i]: relatedTagsArray\n                    })\n                    i++;\n                })\n                this.setState(prev => ({\n                    shayariObject: Object.assign({}, prev.shayariObject, {\n                            [this.props.tag]: {\n                                ...prev.shayariObject[this.props.tag],\n                                titleArray: titleArray,\n                                contentArray: contentArray,\n                                poetArray: poetArray,\n                                relatedTagsObject: tempRelatedTagsObject\n                            }\n                    })\n                }), () => {\n                    this.props.putIntoShayariObject(this.state.shayariObject)\n                })\n            })\n        }\n    }\n\n    handleContentClick = (e, content) => {\n        e.target.innerHTML = content;\n    }\n\n    handleSnackbarClose = () => {\n        this.setState({\n            snackbar: false\n        })\n    }\n\n    handleCopy = () => {\n        this.setState({\n            snackbar: true\n        })\n    }\n\n\n    render() {\n\n        const { tag } = this.props;\n        const { shayariObject } = this.state;\n        var titleArray = shayariObject[tag].titleArray;\n        var contentArray = shayariObject[tag].contentArray;\n        var poetArray = shayariObject[tag].poetArray;\n        var tagsObject = shayariObject[tag].relatedTagsObject;\n        const labelIconStyle = {\n            fontSize: '22px'\n        }\n        return (\n            <div id='tagPage'>\n                <h2 style={{textAlign: 'center', textTransform: 'capitalize'}}>{tag}</h2>\n                <hr/>\n                {\n                    shayariObject[tag].titleArray.length ?\n                    titleArray.map((title, i) => (\n                        <React.Fragment key={i}>\n                        <div className={`shayariCard div${i}`}>\n                            <div className={`shayariCardHeader div${i}`}>\n                                <Clipboard \n                                className='copyBtn'\n                                data-clipboard-text={\n                                    titleArray[i].charAt(0).toUpperCase() + titleArray[i].slice(1) + '\\n' \n                                    + contentArray[i].charAt(0).toUpperCase() + contentArray[i].slice(1) \n                                    + '\\nbestshayaris.com'}\n                                onClick={this.handleCopy}>\n                                copy\n                                </Clipboard>\n                            </div>\n                            <div className={`div${i} shayariCardTitle`}>\n                                {title.charAt(0).toUpperCase() + title.slice(1)}\n                            </div>\n                            <br/>\n                            <div className={`div${i} shayariCardContent`} onClick={e => this.handleContentClick(e, contentArray[i])}>\n                                {contentArray[i].length > 200 ? contentArray[i].substring(0,200) + '....' : contentArray[i]}\n                            </div>\n                            <div className='shayariCardLinks'>\n                                <LabelSharpIcon style={labelIconStyle} />\n                                {tagsObject[i].map((tag, i) => (\n                                    <React.Fragment key={tag}>\n                                        <Link to={`./${tag}`} className='relatedLinks'>{i === 0 ? null : ','}{tag}</Link>\n                                    </React.Fragment>\n                                ))}\n                            </div>\n                            <div className='shayariCardPoet'>\n                                {poetArray[i]}\n                            </div>\n                            &ensp;\n                        </div>\n                        <hr/>\n                        </React.Fragment>\n                    ))\n                    :\n                    this.fetchContent()\n                }\n                <SnackbarContainer open={this.state.snackbar} message='copied.' handleClose={this.handleSnackbarClose} />\n            </div>\n        )\n    }\n}\n\nexport default TagPage","import React, { Component } from 'react'\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport firebase from 'firebase'\nimport '../styles/Upload.css'\n\nclass Upload extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            authenticated: false,\n            password: '',\n            title: '',\n            content: '',\n            poet: '',\n            tags: [],\n            newTagInput: false,\n            newTagInputValue: '',\n            uploading: false\n        }\n    }\n\n    componentDidMount(){\n        firebase.firestore().collection('users').doc('auth').get()\n        .then(doc => {\n            this.setState({\n                password: doc.data().password\n            })\n        })\n    }\n\n    handleTagChange = (e) => {\n        this.setState(prev => ({\n            tags: e.target.value\n        }))\n    }\n\n    handleTitleChange = (e) => {\n        this.setState({\n            title: e.target.value\n        })\n    }\n\n    handleContentChange = (e) => {\n        this.setState({\n            content: e.target.value\n        })\n    }\n\n    handlePoetChange = (e) => {\n        this.setState({\n            poet: e.target.value\n        })\n    }\n\n    upload = () => {\n        var tags = this.state.tags;\n        var title = this.state.title;\n        var content = this.state.content;\n        var poet = this.state.poet;\n        if(tags){\n            if(title){\n                if(content){\n                    this.setState({\n                        uploading: true\n                    })\n                    if(this.state.newTagInputValue !== ''){                 //there is a new tag\n                        this.setState(prev => ({\n                            tags: [...prev.tags, this.state.newTagInputValue]\n                        }))\n                        firebase.firestore().collection('tags').doc(this.state.newTagInputValue).set({\n                            totalShayaris: 0\n                        })\n                        .then(() => {\n                            //upload\n                            this.state.tags.forEach((tag, i) => {\n                                firebase.firestore().collection('tags').doc(tag).update({\n                                    totalShayaris: firebase.firestore.FieldValue.increment(1)\n                                })\n                                .then(() => {\n                                    firebase.firestore().collection('tags').doc(tag).collection('shayaris').doc().set({\n                                        title: title,\n                                        content: content,\n                                        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                                        tags: this.state.tags,\n                                        poet: poet\n                                    })\n                                    .then(() => {\n                                        if(i === this.state.tags.length-1){\n                                            this.setState({\n                                                title: '',\n                                                content: '',\n                                                poet: '',\n                                                tags: [],\n                                                newTagInput: false,\n                                                newTagInputValue: '',\n                                                uploading: false\n                                            })\n                                            alert('uploaded');\n                                        }\n                                    })\n                                })\n                                .catch(err => {\n                                    alert('cannot upload due to some error.')\n                                })\n                            })\n                        })\n                    } else {                    //there is no new tag\n                        this.state.tags.forEach((tag, i) => {\n                            firebase.firestore().collection('tags').doc(tag).update({\n                                totalShayaris: firebase.firestore.FieldValue.increment(1)\n                            })\n                            .then(() => {\n                                firebase.firestore().collection('tags').doc(tag).collection('shayaris').doc().set({\n                                    title: title,\n                                    content: content,\n                                    poet: poet,\n                                    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                                    tags: this.state.tags,\n                                })\n                                .then(() => {\n                                    if(i === this.state.tags.length-1){\n                                        this.setState({\n                                            title: '',\n                                            content: '',\n                                            poet: '',\n                                            tags: [],\n                                            newTagInput: false,\n                                            newTagInputValue: '',\n                                            uploading: false\n                                        })\n                                        alert('uploaded');\n                                    }\n                                })\n                            })\n                            .catch(err => {\n                                alert('cannot upload due to some error.')\n                            })\n                        })   \n                    }\n                }else {\n                    alert('error')\n                }\n            } else {\n                alert('error')\n            }\n        }else {\n            alert('error')\n        }\n    }\n\n    showNewTagInput = () => {\n        this.setState({\n            newTagInput: !this.state.newTagInput\n        })\n    }\n\n    handleNewTag = (e) => {\n        this.setState({\n            newTagInputValue: e.target.value\n        })\n    }\n\n    authMe = (e) => {\n        if(this.state.password !== ''){\n            if(this.state.password === e.target.value) {\n                this.setState({\n                    authenticated: true\n                })\n            }\n        }\n    }\n\n    render() {\n        return (\n            !this.state.authenticated \n            ? <input placeholder='password' onChange={(e) => this.authMe(e)}></input>\n            :\n            <div style={{textAlign: 'center'}}>\n                <FormControl>\n                    <InputLabel htmlFor=\"select-multiple-chip\">Tag</InputLabel>\n                    <Select\n                      multiple\n                      value={this.state.tags}\n                      onChange={e => this.handleTagChange(e)}\n                      input={<Input id=\"select-multiple-checkbox\" />}\n                      renderValue={selected => selected.join(', ')}\n                    >\n                        {this.props.tags.map(tag => (\n                          <MenuItem key={tag} value={tag}>\n                          <Checkbox checked={this.state.tags.indexOf(tag) > -1} />\n                          <ListItemText primary={tag} />\n                          </MenuItem>\n                        ))}\n                    </Select>\n                    <button className='newTagBtn' onClick={this.showNewTagInput}>New Tag</button>\n\n                    {\n                        this.state.newTagInput ?\n                        <TextField\n                            label=\"New Tag\"\n                            placeholder=\"type your tag\"\n                            value={this.state.newTagInputValue}\n                            onChange={this.handleNewTag}\n                          /> :\n                          null\n                    }\n                  <TextField\n                      label=\"Title\"\n                      placeholder=\"Choose title wisely\"\n                      margin=\"normal\"\n                      value={this.state.title}\n                      onChange={e => this.handleTitleChange(e)}\n                    />\n                  <TextField\n                      label=\"Content\"\n                      placeholder=\"Write beyond imagination\"\n                      multiline\n                      margin=\"normal\"\n                      value={this.state.content}\n                      onChange={e => this.handleContentChange(e)}\n                    />\n                  <TextField\n                      label=\"Poet\"\n                      placeholder=\"Poet\"\n                      margin=\"normal\"\n                      value={this.state.poet}\n                      onChange={e => this.handlePoetChange(e)}\n                    />\n                    <button type='submit' onClick={this.upload} className='uploadBtn' disabled={this.state.uploading}>Upload</button>\n                </FormControl>\n            </div>\n        )\n    }\n}\n\nexport default Upload","import React, { Component } from 'react';\nimport '../styles/Search.css';\nimport { Link } from 'react-router-dom';\n\nclass Search extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            searching: false,\n            searchingWord: '',\n            searchingList: props.tags\n        }\n    }\n    \n      handleInputFocus = (e) => {\n        this.setState({\n          searching: true\n        })\n      }\n    \n      handleInputChange = (e) => {\n        this.setState({\n            searchingWord: e.target.value,\n            searchingList: this.props.tags.filter(tag => {\n                return tag.indexOf(e.target.value.toLowerCase()) !== -1\n            })\n        })\n      }\n\n    render() {\n      const focusStyle = {\n        position: 'absolute',\n        border: 'none',\n        left: '0',\n        width: '100%',\n        margin: '0',\n        height: '35px',\n\n      }\n      const style = {\n        position: 'absolute',\n        width: '20%',\n        right: '0',\n        margin: '6px',\n        height: '25px',\n        fontSize: '16px',\n        border: '1px solid black',\n        paddingLeft: '5px',\n        transition: '.4s',\n        boxShadow: '1px 1px 3px'\n      }\n        return (\n            <React.Fragment>\n            {\n              this.state.searching ? window.addEventListener('popstate', () => this.setState({searching: false, searchingWord: ''})) : null\n            }\n                  <input\n                  style={this.state.searching ? focusStyle : style}\n                  placeholder='search...'\n                  maxLength='20'\n                  onClick={(e) => this.setState({searching: true, searchingWord: e.target.value})}\n                  value={this.state.searchingWord} \n                  onChange={e => this.handleInputChange(e)}/>\n                {\n                    !this.state.searching ? null :\n                    <div id='searchingListParent'>\n                      <ul className='searchingList' onClick={() => this.setState({searching: false, searchingWord: '', searchingList: this.props.tags})}>\n                        {\n                          this.state.searchingList.map((tag, i) => (\n                            <Link key={tag} to={`/tags/${tag}`} className='searchingListItemLink'>\n                                <li className='searchingListItem'>{tag}</li>\n                            </Link>\n                          ))\n                        }\n                      </ul>\n                    </div> \n                }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Search","import React, { Component } from 'react';\nimport Menu from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { Link } from 'react-router-dom';\n\nclass MenuContainer extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            open: false\n        }\n    }\n\n    toggleDrawer = () => {\n      this.setState({\n        open: !this.state.open\n      })\n    }\n\n    render() {\n        const list = () => (\n            <div\n              role=\"presentation\"\n              onClick={() => this.toggleDrawer()}\n              onKeyDown={() => this.toggleDrawer()}\n            >\n              <List>\n                  <ListItem button>\n                    <ListItemIcon><HomeIcon/></ListItemIcon>\n                    <ListItemText><Link to='/' className='drawerTextLink'>Home</Link></ListItemText>\n                  </ListItem>\n              </List>\n            </div>\n          );\n          \n        return (\n            <React.Fragment>\n\n                <Menu fontSize='large' onClick={this.toggleDrawer} />\n\n                <Drawer anchor='left' open={this.state.open} onClose={this.toggleDrawer}>\n                  {list()}\n                </Drawer>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default MenuContainer;","import React, { Component } from 'react'\nimport firebase from 'firebase'\n\nclass Edit extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            tag: '',\n            title: [],\n            content: [],\n            id: [],\n            authenticated: true,\n            password: '',\n            editing: false,\n            editingTitle: '',\n            editingContent: ''\n        }\n    }\n\n    componentDidMount(){\n        firebase.firestore().collection('users').doc('auth').get()\n        .then(doc => {\n            this.setState({\n                password: doc.data().password\n            })\n        })\n    }\n    \n    handleTagChange = (e) => {\n        this.setState({\n            tag: e.target.value\n        })\n    }\n\n    fetchPosts = () => {\n        firebase.firestore().collection('tags').doc(this.state.tag).collection('shayaris').get()\n        .then(snap => {\n            snap.forEach(doc => {\n                this.setState(prev => ({\n                    title: [...prev.title, doc.data().title],\n                    content: [...prev.content, doc.data().content],\n                    id: [...prev.id, doc.id]\n                }))\n            })\n        })\n    }\n\n    authMe = (e) => {\n        if(this.state.password !== ''){\n            if(this.state.password === e.target.value) {\n                this.setState({\n                    authenticated: true\n                })\n            }\n        }\n    }\n\n    handleEdit = (i) => {\n        this.setState({\n            editing: true\n        })\n        var title = document.getElementsByClassName(`div${i}`)[0];\n        var content = document.getElementsByClassName(`div${i}`)[1];\n        title.contentEditable = true;\n        content.contentEditable = true;\n    }\n\n    handleSave = (i) => {\n        this.setState({\n            editing: false\n        })\n        var title = document.getElementsByClassName(`div${i}`)[0];\n        var content = document.getElementsByClassName(`div${i}`)[1];\n        title.contentEditable = false;\n        content.contentEditable = false;\n        console.log(this.state.id[i]);\n        firebase.firestore().collection('tags').doc(this.state.tag).collection('shayaris').doc(this.state.id[i]).update({\n            title: title.innerHTML,\n            content: content.innerHTML\n        })\n    }\n\n    render() {\n        return (\n            !this.state.authenticated \n            ? <input placeholder='password' onChange={(e) => this.authMe(e)}></input>\n            :\n            <div>\n                <select value={this.state.tag} onChange={e => this.handleTagChange(e)}>\n                    {\n                        <option value=''>--select an option--</option>\n                    }\n                    {\n                        this.props.tags.map((tag, i) => (\n                            <option key={i} value={tag}>{tag}</option>\n                        ))\n                    }\n                </select>\n                <button onClick={this.fetchPosts} disabled={!this.state.tag}>Fetch posts</button>\n                {\n                    this.state.title.map((title, i) => {\n                        return (\n                            <React.Fragment key={title}>\n                            <div>\n                                {\n                                    this.state.editing\n                                    ? <div>\n                                        <span onClick={e => this.handleSave(i)}>save</span>\n                                        <span>discard</span>\n                                    </div>\n                                    : <React.Fragment>\n                                    <div>\n                                        <span onClick={e => this.handleEdit(i)}>Edit</span>\n                                    </div>\n                                    </React.Fragment> \n                                }\n                                <div className={`div${i}`}>{title}</div>\n                                <br/>\n                                <div className={`div${i}`}>{this.state.content[i]}</div>\n                            </div>\n                            <hr/>\n                            </React.Fragment>\n                        )\n                    })\n                }\n\n            </div>\n        )\n    }\n}\n\nexport default Edit","import React, { Component } from 'react';\nimport './App.css'\nimport { HashRouter, Switch, Route, Link } from 'react-router-dom'\nimport Home from './components/Home';\nimport Error404 from './components/Error404';\nimport firebase from 'firebase'\nimport TagPage from './components/TagPage';\nimport Upload from './components/Upload';\nimport Search from './components/Search';\nimport MenuContainer from './container/Menu';\nimport Routes from './components/Routes';\nimport Edit from './components/Edit';\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n        tags: [],\n        loading: true,\n        shayariObject: {}\n    }\n  }\n\n  componentDidMount() {\n    var tagsArray = [];\n    var tempShayariObject = {};\n    var totalShayaris = 0;\n    firebase.firestore().collection('tags').get()\n    .then(snap => {\n      snap.forEach(doc => {\n        var tag =  doc.id;\n        totalShayaris = doc.data().totalShayaris;\n        tagsArray.push(tag)\n        tempShayariObject[tag] = {\n          titleArray: [],\n          contentArray: [],\n          poetArray: []\n        }\n      })\n      tagsArray.forEach(tag => {\n        tempShayariObject[tag].relatedTagsObject = {};\n        for(let i=0; i<totalShayaris; i++){\n          tempShayariObject[tag].relatedTagsObject[i] = [];\n        }\n      })\n      this.setState(prev => ({\n        tags: tagsArray,\n        loading: false,\n        shayariObject: Object.assign({}, prev.shayariObject, tempShayariObject)\n      }))\n    })\n    .catch(error => {\n      alert(error.message)\n    })\n  }\n\n  putIntoShayariObject = (shayariObject) => {\n    this.setState(prev => ({\n      shayariObject: Object.assign(prev.shayariObject, shayariObject)\n    }))\n  }\n\n  render() {\n\n    return (\n      this.state.loading ? <h1>loading</h1> :\n      <div className=\"App\">\n      <HashRouter>\n      <div \n      className='header'>\n        <MenuContainer />\n        <span className='headerName'><Link to='/' className='link'>𝓫𝓮𝓼𝓽𝓼𝓱𝓪𝔂𝓪𝓻𝓲𝓼.𝓬𝓸𝓶</Link></span>\n        <Search tags={this.state.tags} />\n      </div>\n\n      <Switch>\n        <Route exact path='/' render={props => <Home tags={this.state.tags} />} />\n\n        <Route path='/tags/:tag' render={props => \n        <TagPage \n        tag={props.match.params.tag}\n        shayariObject={this.state.shayariObject}\n        putIntoShayariObject={this.putIntoShayariObject} />} />\n\n        <Route exact path='/upload' render={props => <Upload tags={this.state.tags} />} />\n        <Route exact path='/edit' render={props => <Edit tags={this.state.tags} />} />\n\n        <Route path='*' component={Error404} />\n      </Switch>\n      {/* <Routes tag={this.state.tags} shayariObject={this.state.shayariObject} putIntoShayariObject={this.putIntoShayariObject} /> */}\n      </HashRouter>\n    </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from 'firebase'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCEMfOB5_j1hIdpxVXOduBuUMTwj5txVZo\",\n    authDomain: \"bestshayari-7f672.firebaseapp.com\",\n    databaseURL: \"https://bestshayari-7f672.firebaseio.com\",\n    projectId: \"bestshayari-7f672\",\n    storageBucket: \"bestshayari-7f672.appspot.com\",\n    messagingSenderId: \"1001640034721\",\n    appId: \"1:1001640034721:web:251a9065628579fe518be0\",\n    measurementId: \"G-EQP9800NT3\"\n};\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}