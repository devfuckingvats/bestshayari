{"version":3,"sources":["components/Home.js","components/Error404.js","components/About.js","components/TagPage.js","App.js","serviceWorker.js","index.js"],"names":["Home","tags","this","props","react_default","a","createElement","Fragment","map","tag","className","key","react_router_dom","to","concat","Component","Error404","About","TagPage","_this$props","shayariObject","contentArray","content","titleArray","title","slice","reverse","i","length","console","log","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleDrawer","setState","drawer","state","loading","_this2","firebase","firestore","collection","get","then","snap","tagsArray","forEach","doc","id","data","push","tempObject","defineProperty","assign","_this3","Menu_default","fontSize","onClick","react_router","exact","path","render","components_Home","components_TagPage","match","params","component","Drawer","anchor","open","onClose","role","onKeyDown","List","ListItem","button","ListItemIcon","icons_Home_default","ListItemText","Info_default","Boolean","window","location","hostname","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c6a0d19e.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport '../styles/Home.css';\nimport { Link } from 'react-router-dom'\n\nclass Home extends Component {\n\n    render() {\n        const { tags } = this.props;\n        return (\n            <React.Fragment>\n                {\n                    tags.map(tag => (\n                    <div className='tagCards' \n                    key={tag}>\n                    <Link to={`/${tag}`}>{tag}</Link>\n                    </div>\n                    ))\n                }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Home","import React, { Component } from 'react'\n\nexport default class Error404 extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Error404</h1>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nclass About extends Component {\n    render() {\n        return (\n            <div>\n                <h1>About</h1>\n            </div>\n        )\n    }\n}\n\nexport default About","import React, { Component } from 'react'\n\nclass TagPage extends Component {\n    render() {\n        const { tag, shayariObject } = this.props;\n        var contentArray = shayariObject[tag].content[0];\n        var titleArray = shayariObject[tag].title[0];\n        return (\n            <div>\n                <h2>{tag}</h2>\n                <hr/>\n                {\n                    titleArray.slice(0).reverse().map((title, i) => (\n                    <div key={title}>\n                        <div>{title}</div>\n                        <div>{contentArray[contentArray.length-i-1]}</div><hr/>\n                    </div>\n                    ))\n                }\n                    {console.log(shayariObject[tag])}\n            </div>\n        )\n    }\n}\n\nexport default TagPage","import React, { Component } from 'react';\nimport './App.css'\nimport { HashRouter, Switch, Route, Link } from 'react-router-dom'\nimport Home from './components/Home';\nimport Error404 from './components/Error404';\nimport About from './components/About';\nimport Menu from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport HomeIcon from '@material-ui/icons/Home'\nimport InfoIcon from '@material-ui/icons/Info'\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport firebase from 'firebase'\nimport TagPage from './components/TagPage';\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n        tags: [],\n        drawer: false,\n        loading: true,\n        shayariObject: {},\n    }\n  }\n\n  componentDidMount() {\n    firebase.firestore().collection('tags').get()\n    .then(snap => {\n      var tagsArray = [];\n      var shayariObject = {};\n\n      snap.forEach(doc => {\n        var tag = doc.id;\n        var title = doc.data().title;\n        var content = doc.data().content;\n        tagsArray.push(tag);\n        var tempObject = {\n          [tag]: {\n            title: [title],\n            content: [content]\n          }\n        }\n        Object.assign(shayariObject, tempObject)\n      })\n      this.setState({\n        loading: false,\n        tags: tagsArray,\n        shayariObject: shayariObject\n      })\n    })\n  }\n\n  toggleDrawer = () => {\n    this.setState({\n      drawer: !this.state.drawer\n    })\n  }\n\n  render() {\n    const list = () => (\n      <div\n        role=\"presentation\"\n        onClick={() => this.toggleDrawer()}\n        onKeyDown={() => this.toggleDrawer()}\n      >\n        <List>\n            <ListItem button>\n              <ListItemIcon><HomeIcon/> </ListItemIcon>\n              <ListItemText><Link to='/' className='drawerTextLink'>Home</Link></ListItemText>\n            </ListItem>\n            <ListItem button>\n            <ListItemIcon><InfoIcon/> </ListItemIcon>\n              <ListItemText><Link to='/about' className='drawerTextLink'>About Us</Link></ListItemText>\n            </ListItem>\n        </List>\n      </div>\n    );\n\n    return (\n      this.state.loading ? <h1>loading</h1> :\n      <div className=\"App\">\n      <HashRouter>\n      \n      <div className='header'><Menu fontSize='large' onClick={this.toggleDrawer} /></div>\n\n        <Switch>\n          <Route exact path='/' render={props => <Home tags={this.state.tags} />} />\n\n          <Route path='/:tag' render={props => \n          <TagPage \n          tag={props.match.params.tag} \n          shayariObject={this.state.shayariObject} />} />\n\n          <Route path='/about' component={About} />\n\n          <Route path='*' component={Error404} />\n        </Switch>\n\n        <Drawer anchor='top' open={this.state.drawer} onClose={this.toggleDrawer}>\n            {list()}\n          </Drawer>\n      </HashRouter>\n    </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from 'firebase'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDNUqtCtU8vr7ureS57yQ7k6iuJoP4rtz0\",\n    authDomain: \"bestshayari-d83c1.firebaseapp.com\",\n    databaseURL: \"https://bestshayari-d83c1.firebaseio.com\",\n    projectId: \"bestshayari-d83c1\",\n    storageBucket: \"bestshayari-d83c1.appspot.com\",\n    messagingSenderId: \"354801526205\",\n    appId: \"1:354801526205:web:740bd271ebe3e3cf4a1ed4\",\n    measurementId: \"G-BQWN4W2VND\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}